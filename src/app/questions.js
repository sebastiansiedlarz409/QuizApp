const questions = [
  //C/C++
  {
    question: "Jaki typ służy do przechowywania wartości TRUE/FALSE?",
    url: "",
    a1: "bool",
    a2: "byte",
    a3: "char",
    a4: "decimal",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Typ "bool" jest natywnym typem do przechowywania wartości prawda/fałsz mimo, że równie dobrze moglibyśmy się posłużyć 0 i 1 np. w zmiennej całkowitej. W części języków typ ten może nazywać się "boolean".',
  },
  {
    question:
      "Jaki typ służy do przechowywania wartości całkowitych z zakresu 0 do 255?",
    url: "",
    a1: "unsigned char",
    a2: "unsigend short",
    a3: "char",
    a4: "short",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'W pytaniu tym chodzi o zakresy typów całkowitych w C/C++. Typ char przechowuje liczby w zakresie -128 do 127 a unsigned char w zakresie 0 do 255. Świadomość zakresów i tego, że są inne typy danych niż "int" dobrze świadczy o programiście.',
  },
  {
    question: "Czy typy float i double są identyczne?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: 'Typ "double" przechowuje dane w 8 bajtach a float tylko w 4bajtach.',
  },
  {
    question: 'Czy typy "int" i "signed int" są identyczne?',
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: 'Zazwyczaj typy są domyślnie "signed". Jeżeli chcemy "unsigned" musimy to napiać.',
  },
  {
    question: "Czy typy decimal służy do zapisu liczb ułamkowych?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Decimal to bardziej złożony typ, który służy do przechowywania liczb ułamkowych bez obawy o utratę precyzji lub inne dziwne zachowania.",
  },
  {
    question: "Rozmiar typu int w pamięci to?",
    url: "",
    a1: "4B",
    a2: "1B",
    a3: "2B",
    a4: "8B",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Rozmiar typu unsigned long long w pamięci to?",
    url: "",
    a1: "8B",
    a2: "1B",
    a3: "2B",
    a4: "4B",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Rozmiar typu bool w pamięci to?",
    url: "",
    a1: "1B",
    a2: "4B",
    a3: "2B",
    a4: "8B",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Czy pętle do..while oraz while są identyczne?",
    url: "/images/dowhilewhile.png",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Pętla do...while wykona się zawsze przynajmniej raz, ponieważ najpierw wykonywana jest iteracja a dopiero po niej sprawdzany jest warunek.",
  },
  {
    question:
      'Aby wypisać znak za pomocą funkcji "printf()" należy posłużyć się specyfikatorem?',
    url: "",
    a1: "%c",
    a2: "%u",
    a3: "%d",
    a4: "%f",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Funkcja "printf()" to odpowiednik std::cout z języka C. Pozwal ona wypisywać tekst na ekranie według ciągu formatującego podanego w pierwwszym parametrze np. "printf("Wynik: %u", wynik);"',
  },
  {
    question:
      'Aby wypisać string za pomocą funkcji "printf()" należy posłużyć się specyfikatorem?',
    url: "",
    a1: "%s",
    a2: "%u",
    a3: "%d",
    a4: "%c",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Funkcja "printf()" to odpowiednik std::cout z języka C. Pozwal ona wypisywać tekst na ekranie według ciągu formatującego podanego w pierwwszym parametrze np. "printf("Wynik: %u", wynik);"',
  },
  {
    question:
      'Aby wypisać liczbę całkowitą ze znakiem za pomocą funkcji "printf()" należy posłużyć się specyfikatorem?',
    url: "",
    a1: "%d",
    a2: "%c",
    a3: "%u",
    a4: "%f",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Funkcja "printf()" to odpowiednik std::cout z języka C. Pozwal ona wypisywać tekst na ekranie według ciągu formatującego podanego w pierwwszym parametrze np. "printf("Wynik: %u", wynik);"',
  },
  {
    question:
      'Aby wypisać liczbę zmiennoprzecinkową za pomocą funkcji "printf()" należy posłużyć się specyfikatorem?',
    url: "",
    a1: "%f",
    a2: "%u",
    a3: "%d",
    a4: "%c",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Funkcja "printf()" to odpowiednik std::cout z języka C. Pozwal ona wypisywać tekst na ekranie według ciągu formatującego podanego w pierwwszym parametrze np. "printf("Wynik: %u", wynik);"',
  },
  {
    question: "Strukturą FILO jest?",
    url: "",
    a1: "Stos",
    a2: "Kolejka",
    a3: "Lista",
    a4: "Sterta",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "FILO - First In Last Out. Taką strukturą jest stos.",
  },
  {
    question:
      "Która struktura danych może być zaimplementowana przy wykorzystaniu jedynie wymienionych metod?",
    url: "/images/stos.png",
    a1: "Stos",
    a2: "Tablica",
    a3: "Kolejka FIFO",
    a4: "Drzewo Binarne",
    tag: "OFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Strukturą FIFO jest?",
    url: "",
    a1: "Kolejka",
    a2: "Stos",
    a3: "Lista",
    a4: "Sterta",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "FIFO - First In First Out. Taką strukturą jest kolejka.",
  },
  {
    question: "Struktura typu FILO to to samo co LIFO?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "FIFO - First In First Out. LIFO - Last In First Out.",
  },
  {
    question:
      "Strukturą liniową (elementy nie są jeden za drugim w pamięci) NIE jest?",
    url: "collections.png",
    a1: "Lista",
    a2: "Kolejka",
    a3: "Wektor",
    a4: "Sterta",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Struktura liniowa - kolekcja, w której dane przechowywane są jeden za drugim w pamięci. W liście każdy element jest gdzie idziej w pamięci (każdy posiada wskaźnik na poprzednika i następce dzięki czemu możliwe jest przesuwanie się po liście).",
  },
  {
    question: "Definicją własnego typu jest?",
    url: "",
    a1: "wszystkie pozostałe",
    a2: "klasa",
    a3: "struktura",
    a4: "typ wyliczeniowy",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Zarówno klasa jak i struktura służy do definicji własnego typu złożonego, który składa się z typów prostych lub innych typów złożonych.",
  },
  {
    question: "Typ wyliczeniowy to?",
    url: "",
    a1: "enum",
    a2: "list",
    a3: "tuple",
    a4: "dictionary",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Enum to typ wyliczeniowy w praktycznie każym stosowanym dzisiaj języku. Pozwal ograniczyć możliwe do wpisania wartości np. do zmiennej.",
  },
  {
    question:
      "Elementem języka, który pozwala zdefiniować możliwe wartości jakie można przypisać do zmiennej jest?",
    url: "",
    a1: "enum",
    a2: "set",
    a3: "tuple",
    a4: "makro",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Enum to typ wyliczeniowy w praktycznie każym stosowanym dzisiaj języku. Pozwal ograniczyć możliwe do wpisania wartości np. do zmiennej.",
  },
  {
    question: "Funkcja main w C/C++ zawsze musi zwrócić wartość 0?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Nie musi. Przyjeło się, że 0 oznacza sukces czyli poprawne wykonanie programu. Przerwanie programy wcześniej z jakiegoś powodu powino zwracać coś innego.",
  },
  {
    question:
      'Jeżeli jako typ zwracany podamy "void*" oznacza to, że nic nie zwracamy?',
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: 'Void* to wskaźnik na typ nie określony. Funkcja zwracająca "void*" zwraca wskaźnik.',
  },
  {
    question:
      'Jeżeli jako typ zwracany podamy "void" oznacza to, że nic nie zwracamy?',
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Void oznacza, że funkcja nic nie zwraca, ale nie wyklucza istnienia w jej ciele słowa kluczowego return",
  },
  {
    question:
      "Czy w C/C++ możliwe jest zwrócienie z funkcji wartości jeżeli ta funkcja ma typ zwracany void?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Jeżeli użyjemy referencji lub wskaźnika do przekazania argumentu to możliwe jest oddanie na zewnątrz policzonej wartości i to nie jednej.",
  },
  {
    question:
      'Czy w funkcji zwracającej "void" można użyć słowa kluczowego return?',
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Może. Po słowie return nie pada żadna wartość/zmienna.",
  },
  {
    question: "W C++ każda zmienna domyslnie przekazywana jest przez wartość?",
    url: "/images/copy.jpg",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Jeżeli chcemy uzyskać efekt typu referencyjnego i uniknąć kopi musimy użyć wskaźnika lub referencji &.",
  },
  {
    question: "Wywołanie funkcji przez samą siebie to?",
    url: "",
    a1: "rekurencja",
    a2: "iteracja",
    a3: "callback",
    a4: "przeciążenie",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "W przypadku rekurencji ważne jest by kontrolować ilość zagłębień. Stosując rekurencje bardzo łatwo jest przekroczyć rozmiar stosu, ponieważ każda instancja funkcji alokuje tam swoje zmienne lokalne.",
  },
  {
    question: "Słowo kluczowe pomijające bieżącą iterację to?",
    url: "",
    a1: "continue",
    a2: "break",
    a3: "return",
    a4: "skip",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Słowo kluczowe przerywające pętle to?",
    url: "",
    a1: "break",
    a2: "continue",
    a3: "static",
    a4: "skip",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Na obrazku widzimy?",
    url: "/images/decl.png",
    a1: "deklaracje funkcji",
    a2: "definicję funkcji",
    a3: "wywołanie funkcji",
    a4: "definicję wskaźnika na funkcję",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Deklaracja to poinformowanie kompilatora, że gdzieś będzie zdefiniowana dana funkcja/zmienna. Definicja zawiera już ciało lub przypisanie wartości w przypadku zmiennych.",
  },
  {
    question: "Adres w pamięci nazywany jest",
    url: "/images/ptr.png",
    a1: "Wskaźnikiem",
    a2: "Referencją",
    a3: "Delegatem",
    a4: "Lambdą",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Adres to po prostu liczba. Każdy bajt pamięci ma swój adres.",
  },
  {
    question: 'Instrukcja C++ "cout" znajduje się w namespace?',
    url: "",
    a1: "std",
    a2: "console",
    a3: "common",
    a4: "system",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "std::cout, std::cin itd",
  },
  {
    question: 'Instrukcja C++ "cin" znajduje się w namespace?',
    url: "",
    a1: "std",
    a2: "console",
    a3: "common",
    a4: "system",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "std::cout, std::cin itd",
  },
  {
    question: 'Typ "string" C++ znajduje się w namespace?',
    url: "",
    a1: "std",
    a2: "string",
    a3: "common",
    a4: "system",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "std::cout, std::cin itd",
  },
  {
    question:
      "W programie C/C++ może znajdować się więcej niż jedna funkcja main?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Nie może. Możliwe jest jednak nazwanie funkcji wejściowej inaczej i wykorzystanie funkcji main do innego celu.",
  },
  {
    question: "Funkcja main w C/C++ przyjmuje jakieś parametry?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Tak przyjmuje dokładnie dwa. Liczbę całkowitą z ilością argumentów programu int argc i tablicę stringów w formie char** argv. Co to za parametry? Wywołując program z cmd po spacji możemy podać jakieś argumenty. Każdy zapisywan jest jako string w tej tablicy.",
  },
  {
    question: 'Słowo kluczowe "this" w C/C++ jest wskaźnikiem?',
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: 'Tak, a do wartości odwołujemy się operatorem "->" np. "this->name"',
  },
  {
    question: "Ile konstruktorów można umieścić w klasie C++?",
    url: "",
    a1: "dowolną ilość",
    a2: "1",
    a3: "2",
    a4: "3",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Ile destruktorów można umieścić w klasie C++?",
    url: "",
    a1: "1",
    a2: "2",
    a3: "3",
    a4: "dowolną ilość",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Czy destruktory mogą przyjmować parametry?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "",
  },
  {
    question:
      "Jeżeli w języku C deklarując/definiując funkcję nawias na parametry zostawimy pusty?",
    url: "",
    a1: "funkcja ta przyjmuje nieokreśloną z góry ilość argumentów",
    a2: "funkcja nie przyjmuje żadnych arguemntów",
    a3: "funckja przyjmuje jeden parametr",
    a4: "jest to błąd składniowy",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Pusty nawias oznacza nieokreśloną ilość parametrów. Możemy w takim przypadku podawać ich ile chcemy a później się do nich w odpowiedni sposób odwołać. Jeżeli w nawiasie jest "void" to nie ma parametrów np. void make(void){}',
  },
  {
    question: "W strukurze C/C++ wszystkie elementy są domyślnie prywatne?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "To jest jedyna różnica względem klas w C++. W C# różnice są dużo większe (!)",
  },
  {
    question: "W klasie C/C++ wszystkie elementy są domyślnie prywatne?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "To jest jedyna różnica względem klas w C++. W C# różnice są dużo większe (!)",
  },
  {
    question: "W C/C++ możliwe jest dziedziczenie z klasy abstrakcyjnej?",
    url: "/images/abstract-highlight-cs.png",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Oczywiście. Klasy abstrakcyjne są po to by z nich dziedziczyć. Obiektu nie da się utworzyć.",
  },
  {
    question: "Jedyną błędną z punktu widzenia języka C++ konstrukcją jest?",
    url: "",
    a1: 'print("Hello world");',
    a2: 'printf("Hello world");',
    a3: 'std::cout<<"Hello world";',
    a4: 'cout<<"Hello world";',
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'W C++ nie ma takiej funkcji jak "print()"',
  },
  {
    question: "Komentarze jednolinijkowe w C/C++ rozpoczynamy od?",
    url: "",
    a1: "//",
    a2: "/*",
    a3: "\\\\",
    a4: "#",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Metodą klasy std::string zwracającą długość łańcuch tekstowego jest?",
    url: "",
    a1: "length()",
    a2: "len()",
    a3: "size()",
    a4: "count()",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Metodą klasy std::string zwracającą podłańcuch łańcucha tekstowego jest?",
    url: "",
    a1: "substr()",
    a2: "substring()",
    a3: "slice()",
    a4: "cut()",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Metodą klasy std::string zwracającą indeks pierwszego wystąpienia połańcucha w łańcuchu tekstowym jest?",
    url: "",
    a1: "find()",
    a2: "rfind()",
    a3: "compare()",
    a4: "filtr()",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Łańcuch tekstowy w C/C++ może zostać umieszczony między apostrofami?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Pojedynczy znak można umieścić między apostrofami. String tylko w cudzysłowiach.",
  },
  {
    question: "Klasa std::string przeciąża operator []?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Tak. Zwraca on znak pod danym indeksem. Stringi to gdzieś pod spodem tablice znaków.",
  },
  {
    question: "Instrukcje ++a oraz a++ są równoznaczne?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Jeżeli zrobimy b = a++ oraz b = ++a to zobaczymy różnice. W pierwszym przypakdu najpierw do b przypiszemy a, a potem zwiększymy a. W drugim najpierw następuje inkrementacja a później przypisanie.",
  },
  {
    question: 'Słowo kluczowe "const" oznacza stałą?',
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Kompilatory czasami w ramach optymalizacji same oznaczają zmienne jako stałe gdy zobaczą, że dany obiekt jest tylko czytany.",
  },
  {
    question: 'Instrukcja "#define" służy do tworzenia makr preprocesora?',
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Przed kompilacją w trakcie działania preprocesora wszystkie miejsca gdzie wykorzystaliśmy makro są podmieniane na jego wartość.",
  },
  {
    question: "Makra preprocesora działają w C/C++ tak samo jak stałe?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: 'Makro to nie jest zmienna/stała. Przykład: "#define PI 3.13". Wszystkie wystąpienia PI w kodzie zostaną podmienione na 3.14 jeszcze przed właściwą kompilacją.',
  },
  {
    question: "Operatory & oraz && są równoznaczne?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Pierwszy to operator bitowy a drugi to operator logiczny.",
  },
  {
    question: "Operatory | oraz || są równoznaczne?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Pierwszy to operator bitowy a drugi to operator logiczny.",
  },
  {
    question: "Operatory ^ oraz ~ są równoznaczne?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Pierwszy to bitowa różnica symetryczna (XOR) a drugi to negacja (NOT).",
  },
  {
    question: "Operator ^ to operator potęgowania?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Jest to operator różnicy symetrycznej (bitowy XOR)",
  },
  {
    question: "Który operator wykonuje operację modulo?",
    url: "",
    a1: "%",
    a2: "#",
    a3: "!",
    a4: "^",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Który operator wykonuje operację różnicy symetrycznej?",
    url: "",
    a1: "^",
    a2: "~",
    a3: "!",
    a4: "|",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Operatorem o najwyższym priorytecie w C++ jest",
    url: "",
    a1: "operator castowania (type)",
    a2: "operator dodawania +",
    a3: "operator statku kosmiczengo <=>",
    a4: "operator tryanrny ?:",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "W internecie łatwo znaleźć tabelkę z kolejnością operatorów. Jest to mega istotne ze względu na kolejność wykonywanie działań. I nie chodzi tu tylko o proste operatory jak te arytmetyczne.",
  },
  {
    question: "Operatorem o najniższym priorytecie w C++ jest",
    url: "",
    a1: ",",
    a2: "==",
    a3: "::",
    a4: "new",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Z wyżej wymienionej listy najważniejszy jest :: a przecinek jest najmniej ważny.",
  },
  {
    question: "Operatorem C++ nie jest",
    url: "",
    a1: "extern",
    a2: "new",
    a3: "delete",
    a4: "sizeof",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Wszystkie opcje to słowa kluczowe C++. Operatorem nie jest tylko "extern".',
  },
  {
    question: "Który rodzaj operatora wymaga trzech operandów?",
    url: "",
    a1: "trynarny",
    a2: "binarny",
    a3: "unarny",
    a4: "żaden z powyższych",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Jak sama nazwa wskazuje :) Przykład: "int a = b == 2 ? 1 : 4;"',
  },
  {
    question: "Operator indeksowania to?",
    url: "",
    a1: "[]",
    a2: "()",
    a3: "{}",
    a4: "<>",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'W Javie często stosuje się metody do pobierania wartości z pod danego indeksu np. "kolekcja.get(2)".',
  },
  {
    question: "Operator statku kosmicznego to?",
    url: "",
    a1: "<=>",
    a2: "==",
    a3: "<>",
    a4: "><",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: '"<=>" jest operatorem statku kosmiczengo. Został wprowadzony w C++20 i służy do porównywania obiektów klas.',
  },
  {
    question: "Pliki źródłowe języka C++ mają rozszerzenie?",
    url: "",
    a1: ".cc",
    a2: ".c",
    a3: ".cs",
    a4: ".h",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Tak, *.cc to również rozszerzenie plików C++, ale i tak każdy pisze *.cpp",
  },
  {
    question: "Pliki źródłowe języka C mają rozszerzenie?",
    url: "",
    a1: ".c",
    a2: ".cc",
    a3: ".cs",
    a4: ".cpp",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Pliki nagłówkowe języka C/C++ mają rozszerzenie?",
    url: "",
    a1: ".h",
    a2: ".cc",
    a3: ".cs",
    a4: ".cpp",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Błędnym składniowo zapisem w C/C++ jest?",
    url: "",
    a1: "for();",
    a2: "for(;;);",
    a3: "while(1){}",
    a4: "while(!0){}",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Pętla for wymaga w nawiasie minimum dwóch średników.",
  },
  {
    question: "Pętlą dostępną w C/C++ nie jest?",
    url: "",
    a1: "foreach",
    a2: "for",
    a3: "while",
    a4: "do..while",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Co nie oznacza, że nie ma w nim pętli o podobnym charakterze: "for(auto x in collection){}"',
  },
  {
    question: "Typem, który nie jest dostępny w C/C++ jest?",
    url: "",
    a1: "number",
    a2: "int",
    a3: "char",
    a4: "void",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Które słowo jest słowem kluczowym C/C++?",
    url: "",
    a1: "switch",
    a2: "ref",
    a3: "out",
    a4: "dynamic",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Które słowo NIE jest słowem kluczowym C/C++?",
    url: "",
    a1: "peek",
    a2: "if",
    a3: "extern",
    a4: "volatile",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: '"volatile" to słowo kluczowe umieszczane przy definicji zmiennej. Mówi ono kompilatorowi by nie optymalizowała operacji na tej zmiennej, a zostawił je tak jak zostały napisane.',
  },
  {
    question: "Kompilatorem języka C/C++ nie jest?",
    url: "",
    a1: "IL",
    a2: "GCC",
    a3: "Visual C++",
    a4: "Clang",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "IL to skrót od Intermediate Language czyli języka pośredniego dla C#/F#/Visual Basic. Pozostałe programy to kompilatory często używane pod spodem przez IDE.",
  },
  {
    question: "Język C++ jest nadzbiorem języka C?",
    url: "/images/ccpp.jpg",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Wszystkie elementy C są dostępne w C++.",
  },
  {
    question: 'Wartość "nullptr" to dokładnie to samo co "NULL"?',
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "NULL to tak naprawdę liczba 0, nullptr to specjalny typ, który ma zastąpić NULL. Ma to znaczenie przy przeciążaniu funkcji, gdyż NULL może zostać potraktowany jako int a nie jako wskaźnik.",
  },
  {
    question: 'Zapis "const char* a;" oraz "char* const a" są równoznaczne?',
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "W pierwszym przypadku stała jest wartość, na którą wskazuje wskaźnik. W drugim stały jest adres w zmiennej wskaźnikowej.",
  },
  {
    question: 'Wartość wyrażenia "!true" w C/C++ jest równoznaczna?',
    url: "",
    a1: "0",
    a2: "1",
    a3: "true",
    a4: "undefined",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Negacja logiczna prawdy to fałsz.",
  },
  {
    question: 'Ile razy wykona się pętla "while(999999)" w C/C++?',
    url: "",
    a1: "nieskończenie wiele",
    a2: "ani razu",
    a3: "1",
    a4: "999999",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Każda wartość inna niż false/0 to prawda. Pętla wykona się nieskończenie wiele razy. To to samo co while(true){}.",
  },
  {
    question: 'Ile razy wykona się pętla "while(0)" w C/C++?',
    url: "",
    a1: "ani razu",
    a2: "nieskończenie wiele",
    a3: "1",
    a4: "999999",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Każda wartość inna niż false/0 to prawda. Pętla wykona się nieskończenie wiele razy. To to samo co while(true){}.",
  },
  {
    question:
      'Zakładając, że "int a = 2;" wartość przypisana do zmiennej wynosi "int b = a++;"?',
    url: "",
    a1: "2",
    a2: "3",
    a3: "0",
    a4: "wystąpi błąd",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Najpierw wykonane zostanie przypisanie a potem inkrementacja oryginalnej zmiennej.",
  },
  {
    question:
      'Zakładając, że "int a = 2;" wartość przypisana do zmiennej wynosi "int b = ++a;"?',
    url: "",
    a1: "3",
    a2: "2",
    a3: "0",
    a4: "wystąpi błąd",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Najpierw następuje inkrementacja a później przypisanie (kłania się kolejność operatorów).",
  },
  {
    question: "Struktura i unia w C/C++ to to samo?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Unia to struktura, która przyjmuje rozmiar największego elementu składowego. Pozostałe się na niego nakładają.",
  },
  {
    question: "Słowo kluczowe new alokuje pamięć w miejscu określanym mianem?",
    url: "",
    a1: "sterty",
    a2: "stosu",
    a3: "mapy",
    a4: "zbioru",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "W kazdym języku alokujemy na stercie/heapie.",
  },
  {
    question: "Referencja to to samo co wskaźnik?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Referencja to wskaźnik z okrojonymi możliwościami. Jest bezpieczniejsza, ponieważ nie da się na niej wykonywać działaj arytmetycznych",
  },
  {
    question:
      "Iterator to obiekt, który ułatwia przemieszczanie się po kontenerze?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Iterator to obiekt pewnej klasy, który ma ułatwić poruszanie się po kolekcji. Dostarcza np. takie metody jak next(), prev(). Iterator to taka nakładka abstrakcji, która ma ułatwić i poprawić uniwersalność kodu.",
  },
  {
    question:
      "W języku C i C++ możliwe jest pobranie adresu funkcji i zapisanie go we wskaźniku?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: 'Istnieje w C/C++ coś takiego jak wskaźnik na funkcję. Funkcja: "int add(int a, int b);" wskaźnik: "int(addPtr*)(int,int) = add;"',
  },
  {
    question: "Operatorem pobrania adresu w C/C++ jest?",
    url: "",
    a1: "&",
    a2: "&&",
    a3: "|",
    a4: "*",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Przykład: "int* a_ptr = &a;"',
  },
  {
    question: "Operatorem wyłuskania w C/C++ jest?",
    url: "",
    a1: "*",
    a2: "&",
    a3: "|",
    a4: "%",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Wyłuskanie to pobranie wartości, na którą wskazuje wskaźnik: "int a = *a_ptr;"',
  },
  {
    question: "Operatorem bitowym nie jest?",
    url: "",
    a1: "&&",
    a2: "&",
    a3: "|",
    a4: "^",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Operatorem logicznym nie jest?",
    url: "",
    a1: "&",
    a2: "&&",
    a3: "||",
    a4: "!",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Operatorem logicznym nie jest?",
    url: "",
    a1: "<<",
    a2: "<=",
    a3: ">=",
    a4: "<",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Operatorem zasięgu jest?",
    url: "",
    a1: "::",
    a2: "()",
    a3: "->",
    a4: ".",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Operatorem trynarnym jest?",
    url: "",
    a1: "?:",
    a2: "::",
    a3: "->",
    a4: "<=>",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Operatorem unarnym jest?",
    url: "",
    a1: "!",
    a2: ">=",
    a3: "<=",
    a4: "==",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: 'Słowo kluczowe "static" w C/C++?',
    url: "",
    a1: "wszystkie pozostałe",
    a2: "powoduje, że element klasy jest wspólny dla wszystkich obiektów i jest przypisany do klasy",
    a3: "powoduje, że zmienna lokalna zachowuje się jak zmienna globalna",
    a4: "powoduje, że element globalny (zmienna, funkcja) jest widoczna tylko w pliku gdzie została zdefiniowana",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Słowo kluczowe "static" ma trzy funkcje.',
  },
  {
    question:
      "Słowem kluczowym służący do zwalniania zaalokowanej pamięci w C++ jest?",
    url: "",
    a1: "delete",
    a2: "free",
    a3: "volatile",
    a4: "static",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Dynamiczne stworzenie obiektu w C/C++ odbywa się za pomocą konstrukcji?",
    url: "/images/stackheap.jpg",
    a1: "MyClass* myObj = new MyClass();",
    a2: "MyClass myObj = new MyClass();",
    a3: "MyClass myObj = MyClass();",
    a4: "MyClass* myObj = MyClass();",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Operator "new" zwraca wskaźnik!',
  },
  {
    question:
      'W C++ dla każdego wystąpienia operatora "new" powinno pojawić się wystąpienie operatora "delete"?',
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Jeżeli nie zwolnimy pamięci dynamicznie alokowanej to następuje jej wyciek. Nie zawsze jest to groźne, ale zwalnianie pamięci powinno być obowiązkowym nawykiem.",
  },
  {
    question: 'Czy kod: "int size = 10; int tablica[size];" jest poprawny?',
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Przy takiej definicji tablicy rozmiar musi być stałą. Próbujemy tu zdefiniować tablicę statyczną. Jej rozmiar musi być znany w czasie KOMPILACJI.",
  },
  {
    question:
      'Czy kod: "int size = 10; int* tablica = new int[size];" jest poprawny?',
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Przy dynamicznej alokacji tablicy rozmiar może być zmienny. Próbujemy tu zdefiniować tablicę dynamiczną.",
  },
  {
    question: "W C++ tablica statyczna alokowana jest w następujący sposób?",
    url: "",
    a1: "int tablica[10];",
    a2: "int* tablica = new int[10];",
    a3: "int** tablica = new int*[10];",
    a4: "int* tablica = new int[10];",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Tablica statyczna nazywana jest statyczną, ponieważ ze względu na miejsce gdzie jest alokowana w pamięci jej rozmiar musi być znany w momencie kompilacji.",
  },
  {
    question: "W C++ tablica dynamiczna alokowana jest w następujący sposób?",
    url: "",
    a2: "int* tablica = new int[10];",
    a1: "int tablica[10];",
    a3: "int* tablica = new[10];",
    a4: "int tablica = new int[10];",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Tablica dynamiczna alokowana jest na stercie. Tak zaalokowaną pamięć trzeba zwalniać.",
  },
  {
    question: "W C++ tablica dynamiczna zwalniana jest w następujący sposób?",
    url: "",
    a2: "delete[] tablica;",
    a1: "delete tablica;",
    a3: "free[] tablica;",
    a4: "free tablica;",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Tablica dynamiczna alokowana jest na stercie. Tak zaalokowaną pamięć trzeba zwalniać.",
  },
  {
    question:
      "Co się stanie jeżeli odpytamy tablicę używając indeksu równego rozmiarowi tej tablicy?",
    url: "",
    a1: "otrzymamy jakieś dane",
    a2: "wystąpi błąd kompilacji",
    a3: "wystąpi błąd runtime",
    a4: "nic się nie stanie",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Za tablicą w pamięci coś się zapewne znajuje. Jest mała szansa na błąd, jeżeli trafimy na granicę strony pamięci.",
  },
  {
    question: "Do rzucania wyjątków w C++ służy słowo kluczowe?",
    url: "",
    a1: "throw",
    a2: "new",
    a3: "raise",
    a4: "catch",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "W C++ jest to throw. W C# podobnie. Python używa słowa raise.",
  },
  {
    question:
      "Konstrukcja języka C++ służąca do łapania rzucanych wyjątków to?",
    url: "",
    a1: "try..catch..",
    a2: "try..except..",
    a3: "try..handle..",
    a4: "try..finally..",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'W C++, C#, Javie służy do tego blok "try...catch...". W pythonie zamiast catch wystepuje except.',
  },
  {
    question: "Operacje powodujące wystąpienie wyjątku",
    url: "",
    a1: "powinny być umieszczone w bloku try",
    a2: "powinny być umieszczone w bloku exception",
    a3: "powinny być umieszczone w bloku throw",
    a4: "powinny być umieszczone w bloku catch",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'W bloku "catch" decydujemy co zrobić gdy ten wyjątek nastąpi.',
  },
  {
    question:
      "Pusty konstruktor jest automatycznie generowany przez kompilator w C++?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Kompilatory generują tylko pusty podstawowy konstruktor bez argumentów.",
  },
  {
    question:
      "Konstruktor kopiujący jest automatycznie generowany przez kompilator w C++?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Kompilatory generują tylko pusty podstawowy konstruktor bez argumentów.",
  },
  {
    question: "Konstruktor posiada typ zwracany?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Konstruktor to metoda o nazwie takiej jak klasa bez typu zwracanego. W pythonie konstruktor to __init__(self)",
  },
  {
    question:
      'Metoda oznaczona jako "friend" ma dostęp do prywatnych pól klasy?',
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Funkcja zaprzyjaźniona zachowuje się jak składowa klasy.",
  },
  {
    question: "Pola oznaczone w klasie jako chronione są dziedziczone w C++?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Tak są, ale ich dostępnośc ulega zmianie na prywatną w klasie pochodnej.",
  },
  {
    question:
      'Konstruktor kopiujący powinien przyjmować obiekt kopiowany jako referencje na stałą "const T&"?',
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: 'Referencja powoduje, że nie jest tworzona zbędna kopia obiektu, a "cons"t informuje, że nie musimy się martwić o to, że obiekt kopiowany zostanie przypadkiem zmodyfikowany.',
  },
  {
    question:
      "W C++ każda definicja klasy musi być zakończona nie tylko klamrą, ale też średnikiem?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Tak, ponieważ po klamrze kończącej klasę możemy odrazu tworzyć jej instancje.",
  },
  {
    question: "C++ jest językiem interpretowanym?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "",
  },
  {
    question: "Komputer 32 bitowy może zaadresować tylko 4GB pamięci?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Na 32 bitach jesteśmy w stanie zakodować 2 do 32 adresów. Jest ich dokadnie 4GB.",
  },
  {
    question: "Komputer 64 bitowy może przyjąć dowolną ilość ramu?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Komputery 64 bitowe też mają limit, jednak jest on tak duży, że ludzie zaczeli twierdzić, że go nie ma. W teorii możemy uzyskać 2 ^ 64 (potęga) bajtów.",
  },
  {
    question: 'Pętla "while(file->EOF){}" będzie wykonywać się do momentu?',
    url: "",
    a1: "aż wskaźnik pozycji w pliku wskaże jego koniec",
    a2: "aż wskaźnik pozycji w pliku wskaże jego początek",
    a3: "aż wskaźnik pozycji w pliku wskaże koniec aktualnej linii",
    a4: "żadne z wymienionych",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "EOF to skrót od End Of File",
  },
  {
    question:
      'W C++ wartość liczbową można wypisać w systemie szesnastkowym za pomocą "cout":',
    url: "",
    a1: "std::cout << std::hex << n << '\\n';",
    a2: "std::cout << std::dec << n << '\\n';",
    a3: "std::cout << std::oct << n << '\\n';",
    a4: "std::cout << std::bin << n << '\\n';",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      'Jaki plik nagłówkowy trzeba dołączyć do kodu by można było użyć "cout" i "cin"?',
    url: "",
    a1: "iostream",
    a2: "string",
    a3: "stdio",
    a4: "cstdio",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Jaki plik nagłówkowy trzeba dołączyć do kodu by można było użyć w C++ stringów",
    url: "",
    a1: "string",
    a2: "cstring",
    a3: "stdlib",
    a4: "stdint",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "W C++ aby wylosować liczbę z zakresu 1 do 100 należy posłużyć się instrukcją?",
    url: "",
    a1: "rand() % 100 + 1;",
    a2: "rand() % 100;",
    a3: "rand() % 99 + 1;",
    a4: "rand() % 99;",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Funkcja "rand()" zwraca wartość od 0 od "RAND_MAX". Funkcja modulo ogranicza maksymalny przedział (łatwo sobie to wyobrazić jak ktoś rozumie modulo) a wartość dodawan przesuwa zakres o pewien offset.',
  },
  {
    question: "W C++ string można zdefiniować za pomocą konstrukcji?",
    url: "",
    a1: "wszystkie pozostałe",
    a2: 'std::string text = "Ala ma kota";',
    a3: 'const char* text = "Ala ma kota";',
    a4: 'char text[12] = "Ala ma kota";',
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Oprócz typu "string", który na marginesie znajuje się w przestrzenii "std" w C++ można używać składni C. String to tablica znaków zakończona 0, żeby program wiedział gdzie kończy się string. Obie konstrukcje powyżej dodają 0 automatycznie. Wersja ze wskaźnikiem nie pozwala modyfikować stringu.',
  },
  {
    question: "W C++ string można zdefiniować za pomocą konstrukcji?",
    url: "",
    a1: "wszystkie pozostałe",
    a2: 'std::string text = "Ala ma kota";',
    a3: 'const char* text = "Ala ma kota";',
    a4: "char text[12] = {'A','l','a',' ','m','a',' ','k','o','t','a', 0};",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Oprócz typu "string", który na marginesie znajuje się w przestrzenii "std" w C++ można używać składni C. String to tablica znaków zakończona 0, żeby program wiedział gdzie kończy się string. Obie konstrukcje powyżej dodają 0 automatycznie. Wersja ze wskaźnikiem nie pozwala modyfikować stringu.',
  },
  {
    question:
      "Która z poniższych konstrukcji nie pozwala zmodyfikować napisu np. poprzez podmianę elementu tablicy operatorem []?",
    url: "",
    a1: 'const char* text = "Ala ma kota";',
    a2: 'char text[12] = "Ala ma kota";',
    a3: 'std::string text = "Ala ma kota";',
    a4: "char text[12] = {'A','l','a',' ','m','a',' ','k','o','t','a', 0};",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Stringi typu "const char*" są umieszczane w pamięci w sekcji tylko do odczytu. Jeżeli napiszemy cout<<"Hello"; to ten napis też jest typu "const char*".',
  },
  {
    question:
      'Aby użyć funkcji "strlen()" do pobrania długości c-style string należy dołączyć?',
    url: "",
    a1: "cstring",
    a2: "string",
    a3: "cstdlib",
    a4: "cstdio",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Funkcja ta znajuje się w "cstring". Przypominamy, że pliki poprzedzone literką c pochodzą z języka C!',
  },
  {
    question: "Co to jest funkcja inline w C++?",
    url: "",
    a1: "funkcja, która zostanie wklejona w miejsce wywołania zamiast normalnego wywołania",
    a2: "funkcja jednolinijkowa",
    a3: "funkcja, która nic nie zwraca",
    a4: "funkcja optymalizowana mocniej niż ma to miejsce normalnie",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Jest to funkcja, która zostanie wklejona w miejsce wywołania zamiast normalnego wywołania. Normalne wywołanie wiąże się ze skokiem, alokacją stosu itp. Małe funkcje można ustawić na inline.",
  },
  {
    question: 'W C++ funkcja biblioteki "cmath" służąca do potęgowania to?',
    url: "",
    a1: "pow(x,y);",
    a2: "power(x,y);",
    a3: "power(x);",
    a4: "pow(x);",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Funkcja pow w pierwszym parametrze przyjmuje wartość a w drugim stopień potęgi.",
  },
  {
    question:
      'W C++ funkcja biblioteki "cmath" służąca do obliczania wartości logarytmu naturalnego to?',
    url: "",
    a1: "log(x);",
    a2: "l(x);",
    a3: "hypot(x);",
    a4: "cbrt(x);",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      'W C++ funkcja biblioteki "cmath" służąca do obliczania wartości bezwzględnej to?',
    url: "",
    a1: "abs(x);",
    a2: "aps(x);",
    a3: "mod(x);",
    a4: "unsigned(x);",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      'W C++ funkcje biblioteki "cmath" "ceil()" oraz "floor()" są równoznaczne?',
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: '"ceil" zaokrągla do najbliższej liczby całkowitej w góre natomiast "floor" zaokrągla do najbliższej liczby całkowitej mniejszej niż podana wartość.',
  },
  //numeric systems
  {
    question: "Liczba 0xAA to w systemie binarnym?",
    url: "",
    a1: "0b10101010",
    a2: "0b11001100",
    a3: "0b00110011",
    a4: "0b01010101",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Każda cyfra w hex to nybel. Każdy nybel to 4 bity w systemie binarnym. 0xA == 0b1010 więc 0xAA to 0x10101010",
  },
  {
    question: "Liczba 0xFF to w systemie binarnym?",
    url: "",
    a1: "0b11111111",
    a2: "0b11011101",
    a3: "0b10111011",
    a4: "0b01000100",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "0xFF to maksymalna wartość do zapisania w unsigned char/byte.",
  },
  {
    question: "Liczba 256 to w systemie szesnastkowym?",
    url: "",
    a1: "0xFF",
    a2: "0x0FF",
    a3: "0x100",
    a4: "0x255",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Przekraczamy maksymalną wartość unsigned bajtu (0xFF). Jeżeli typem jest unsigned bajt wpisanie do niego 256 da 0. Jeżeli jest to większy typ normalnie zobaczmy 0x100",
  },
  {
    question: "Liczba 0b10000000 to w systemie szesnastkowym?",
    url: "",
    a1: "0x80",
    a2: "0x7F",
    a3: "0x88",
    a4: "0x89",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Jest to często używana liczba. Dobrze pamiętać. 0x80 to 0b10000000 a 0x7F to 0b01111111.",
  },
  {
    question:
      "Jeżeli najmniej znaczący bit w liczbie jest ustawiony na 1 to liczba jest parzysta.",
    url: "/images/msblsb.png",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Jeżeli bit najbardziej po prawej jest 1 to liczba jest nieparzysta.",
  },
  {
    question: "Wartość wyrażenia !5 to?",
    url: "",
    a1: "false",
    a2: "undefined",
    a3: "1",
    a4: "0xE",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Każda liczba inna niż 0 to prawda. ! to logiczna negacja. Z całości wychodzi 0 czyli fałsz.",
  },
  {
    question:
      "Wartość wyrażenia 0xDEADC0DE jest zapisana w systemie oznaczanym jako?",
    url: "",
    a1: "HEX",
    a2: "DEC",
    a3: "OCT",
    a4: "BIN",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Prefix 0x służy do zapisu liczb szesnastkowych. Prefix 0b służy do zapisu liczb binarnych. Liczby w systemie ósemkowym poprzedza się poprostu cyfrą 0.",
  },
  {
    question: "Kodowanie liczb ujemnych odbywa się za pomocą metody",
    url: "",
    a1: "Dopełnień do 2",
    a2: "Dopełnień do 1",
    a3: "Znak moduł",
    a4: "IEEE 754",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "U2 to najlepsza metoda zapisu liczb ujemnych. IEEE 754 to standard zapis liczb ułamkowych.",
  },
  {
    question:
      "Kodowanie liczb zmiennoprzecinkowych odbywa się za pomocą standardu",
    url: "",
    a1: "IEEE 754",
    a2: "IEEE 1284",
    a3: "IEEE 1394",
    a4: "U2",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "IEEE 1284 to standard starego złącza LPT. IEEE 1394 to standard starego złącza FireWire. U2 to system usupełnień do 2 służący do zapisu liczb ujemnych.",
  },
  //algorytmy
  {
    question:
      "Złożość obliczeniowa to ilość głównych operacji do wykonania względem ilości danych wejściowych?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Przez pojęcie głównych operacji rozumiemy zazwyczaj ilość iteracji lub przejść funkcji.",
  },
  {
    question: "Przykładem algorytmu typu dziel i zwyciężaj jest?",
    url: "",
    a1: "quick-sort",
    a2: "insert-sort",
    a3: "alg. dijkstra",
    a4: "alg kruskala",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Algorytm quick-sort dzieli zbiór danych na mniejsze części i je sortuje.",
  },
  {
    question: "Przykładem algorytmu zachłannego jest?",
    url: "",
    a1: "alg. dijkstra",
    a2: "insert-sort",
    a3: "select-sort",
    a4: "quick-sort",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Czy graf na obrazku jest skierowany?",
    url: "/images/rzadgrafu.png",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Strzałki na krawędziach mówią czy graf jest skierowany.",
  },
  {
    question: "Czy graf na obrazku jest skierowany?",
    url: "/images/grag.svg",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Strzałki na krawędziach mówią czy graf jest skierowany.",
  },
  {
    question: "Czy graf na obrazku jest drzewem?",
    url: "/images/notree.png",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Drzwo to graf, w którym nie ma cyklu. Wymogiem jest również to by z każdego wierzchołka dało się dojść do każdego innego.",
  },
  {
    question: "Czy graf na obrazku jest drzewem?",
    url: "/images/tree.png",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Drzwo to graf, w którym nie ma cyklu. Wymogiem jest również to by z każdego wierzchołka dało się dojść do każdego innego.",
  },
  {
    question: "Algorytmem grafowym nie jest?",
    url: "",
    a1: "Algorytm Węgierski",
    a2: "Algorytm Dijkstry",
    a3: "Algorytm Kruskala",
    a4: "Algorytm Prima",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Algorytm Węgierski służy do gospodarowania zadaniami i pracownikami.",
  },
  {
    question:
      "Przedstawiając algorytm za pomocą bloków, blok start/stop narysujemy w kształcie?",
    url: "",
    a1: "elipsy",
    a2: "prostokątu",
    a3: "równoległoboku",
    a4: "trójkąta",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Prostokąty zawierają operacje. Równoległoboki zawierają operacje wejścia wyjścia. Trójkątów jako tako nie stosuje się w schematach blokowych algorytmów.",
  },
  {
    question:
      "Najgorszą z punktu widzenia wydajności złożonością algorytmu jest?",
    url: "",
    a1: "O(n!)",
    a2: "O(n^2)",
    a3: "O(1)",
    a4: "O(n)",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Najlepiej wyobrazić sobie wykresy tych funkcji. Im bardziej płaski tym lepiej.",
  },
  {
    question:
      "Najlepszą z punktu widzenia wydajności złożonością algorytmu jest?",
    url: "",
    a1: "O(1)",
    a2: "O(n^2)",
    a3: "O(n^3)",
    a4: "O(nlogn)",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Najlepiej wyobrazić sobie wykresy tych funkcji. Im bardziej płaski tym lepiej.",
  },
  {
    question:
      "Który z wymienionych algorytmów działających na tablicy jednowymiarowej ma złożoność obliczeniową O(n^2)?",
    url: "",
    a1: "sortowanie bąbelkowe",
    a2: "wyszukiwanie binarne",
    a3: "sortowanie bąbelkowe",
    a4: "wypisywanie elementów",
    tag: "OFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Bloczek z ilustracji to blok?",
    url: "/images/warunek.png",
    a1: "warunku",
    a2: "operacji",
    a3: "petli",
    a4: "wejścia-wyjścia",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Algorytm można przedstawić za pomocą?",
    url: "",
    a1: "każdym z wymienionych sposobów",
    a2: "opisem słownym",
    a3: "pseudokodem",
    a4: "schematem blokowym",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Pseudokod to mnie lub bardziej podobna do rzeczywistego kodu forma zapisu.",
  },
  {
    question: "Co oznacza bloczek na obrazku?",
    url: "/images/warunek.png",
    a1: "warunek logiczny",
    a2: "wprowadzenie danych",
    a3: "łącznik",
    a4: "dołączenie podprogramu",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Rodzajem algorytmu nie jest?",
    url: "",
    a1: "alg. kroczący",
    a2: "alg. sekwencyjny",
    a3: "alg. iteracyjny",
    a4: "alg. rekurencyjny",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Algorytm na obrazku to?",
    url: "/images/algsek.png",
    a1: "alg. iteracyjny",
    a2: "alg. sekwencyjny",
    a3: "alg. blokowy",
    a4: "alg. rekurencyjny",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  //programowanie obiektowe
  {
    question:
      "Zasadą programowania obiektowego, która mówi by trzymać jak najwięcej elementów klasy jako prywatne jest?",
    url: "",
    a1: "Hermetyzacja",
    a2: "Abstrakcja",
    a3: "Polimorfizm",
    a4: "Przyjaźń",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Na zewnątrz wystawiamy najmniejsze konieczne API klasy.",
  },
  {
    question: "Wielopostaciowość nazywana jest?",
    url: "",
    a1: "polimorfizmem",
    a2: "dziedziczeniem",
    a3: "abstrakcją",
    a4: "wirtualizacją",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Zależnością klasy jest?",
    url: "",
    a1: "inna klasa w formie obiektu tej klasy",
    a2: "każde pole klasy",
    a3: "każda metoda klasy",
    a4: "żadne z wymienionych",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Zależność to inna klasa. W klasie umieszcza się obiekt innej klasy (jej zależności) by ta mogła skorzystać z jej możliwości.",
  },
  {
    question:
      "Metoda abstrakcyjna musi być zaimplementowana przez klasę dziedziczącą?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Metoda abstrakcyjna lub czysto wirtualna nie ma ciała. Musi być zatem zaimplementowana.",
  },
  {
    question: "Można utworzyć obiekt klasy abstrakcyjnej?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Nie można, ponieważ klasa taka ma metody bez ciała.",
  },
  {
    question: "Można utworzyć referencje/wskaźnik typu klasy abstrakcyjnej?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Mamy tu na mysli zmienną typu abstrakcyjnego, do której przypisywany jest obiekt normalnej klasy dziedziczącej z tej abstrakcyjnej.",
  },
  {
    question: "Z ilu klas może dziedziczyć klasa w C#/Java/Python?",
    url: "",
    a1: "1",
    a2: "2",
    a3: "dowolnej ilości",
    a4: "0",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Dokładnie z jednej. Ma to znaczenie przy plimorfiźmie.",
  },
  {
    question: "Z ilu klas może dziedziczyć klasa w C++?",
    url: "",
    a1: "dowolnej ilości",
    a2: "2",
    a3: "1",
    a4: "0",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "W C++ można dziedziczyć z wielu klas, ale utrudnia to temat polimorfizmu.",
  },
  {
    question: "Przekazywanie zależności do klasy poprzez konstruktor nazywamy?",
    url: "",
    a1: "wstrzykiwaniem zależności",
    a2: "odwracaniem zależności",
    a3: "dziedziczeniem zależności",
    a4: "żadnym z wymienionych",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Jest to Dependency Injection.",
  },
  {
    question: "Obiekt klasy może być przekazany do funkcji przez (C++)?",
    url: "",
    a1: "wszystkie pozostałe",
    a2: "wartość",
    a3: "referencje",
    a4: "wskaźnik",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Metoda ustawiająca prywatne pole to?",
    url: "",
    a1: "setter",
    a2: "getter",
    a3: "metoda wirtualna",
    a4: "metoda abstrakcyjna",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "W C# można do tego celu wykorzystać właściwość (konstrukcja z get i set)",
  },
  {
    question: "Metoda zwracająca prywatne pole to?",
    url: "",
    a1: "getter",
    a2: "setter",
    a3: "metoda wirtualna",
    a4: "metoda abstrakcyjna",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "W C# można do tego celu wykorzystać właściwość (konstrukcja z get i set)",
  },
  {
    question: "Konstruktor?",
    url: "",
    a1: "w typowych przypadkach powinien być funkcją typu public",
    a2: "może być funkcja wirtualną",
    a3: "lista argumentów musi być zawsze pusta",
    a4: "a dostęp tylko do danych prywatnych",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Możliwe jest utworznie konstruktora prywatnego chociaży w celu utworznia singletona.",
  },
  {
    question: "Jak nazywamy składniki, z których zbudowane są obiekty?",
    url: "",
    a1: "pola i metody",
    a2: "klasy i metody",
    a3: "metody i funkcje",
    a4: "funkcje i stałe",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "W C# dochodzą nam jeszcze właściwości (get, set).",
  },
  {
    question: "Na czym polega hermetyzacja?",
    url: "",
    a1: "Na zabezpieczeniu składników obiektu przez ich bezpośrednią modyfikacją",
    a2: "Na zabezpieczeniu konstruktora klasy przed niepowołanym wywołaniem",
    a3: "Na zabezpieczaniu składników klasy przed niepotrzebnym zajmowaniem pamięci",
    a4: "Na deklarowaniu obiektów danej klasy przy pomocy metod wirtualnych",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Na czym polega dziedziczenie w programowaniu obiektowym?",
    url: "",
    a1: "Na tworzeniu nowej klasy na podstawie jednej lub kilku już istniejących klas",
    a2: "Na łączeniu obiektów",
    a3: "Na kopiowaniu cech obiektu przez metodę wirtualną",
    a4: "Na usunięciu z istniejącej klasy zbędnych elementów",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Czy pole i właściwość w terminologi C# to to samo?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Właściwości to konstrukcje z get/set. Pełnią one role getterów i setterów na pola.",
  },
  {
    question:
      "Interfejs to konstrukcja znana np. z języka C# Jest ona podobna do?",
    url: "",
    a1: "klasy abstrakcyjnej",
    a2: "zwykłej klasy",
    a3: "uni",
    a4: "struktury",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Interfejs można porównać do kontraktu, który mówi jakie metody musi zaimplementować klasa dziedzicząca. Klasa abstrakcyjna działa tak samo z tym, że ona może mieć już część metod zaimplementowaną.",
  },
  {
    question: "Programowanie strukturalne i funkcyjne to to samo?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Programowanie funkcyjne opiera się na traktowaniu funkcji jak obiektów.",
  },
  {
    question: "Obiekt to instancja klasy?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Albo struktury.",
  },
  {
    question:
      'Słowo kluczowe "sealed" w C# blokuje możliwość dziedziczenia z klasy?',
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "",
  },
  {
    question:
      'Słowo kluczowe "virtual" oznacza metodę jako zależną od typu obiektu a nie typu referencji?',
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "To słowo kluczowe jest istotne z punktu widzenia polimorfizmu.",
  },
  {
    question: "Klasa pochodna ma dostęp do wszytkich elementów klasy bazowej?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Ma dostęp do elementów publicznych oraz chronionych.",
  },
  {
    question: "Klasy oferują możliwość przeciążania wszystkich operatorów?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Nie da się przeciążyć operatora trynarnego ?:",
  },
  {
    question: "Gdy argumentem funkcji jest struktura/obiekt?",
    url: "",
    a1: "aby funkcja zmieniła oryginał, argumentem musi być wskaźnik do struktury/obiektu",
    a2: "funkcja może zmienić oryginał struktury/obiektu",
    a3: "funkcja może zmienić tylko kopię struktury/obiektu",
    a4: "żadna z pozostałych odpowiedzi nie jest poprawna",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Jaką klasę nazywamy abstrakcyjną?",
    url: "",
    a1: "Zawierająca przynajmniej jedną metodę czysto wirtualną",
    a2: "Taką, która jest jednocześnie klasą bazową i pochodną",
    a3: "Zawierającą wszystkie trzy specyfikatory dostępu",
    a4: "Zawierającą 2 wersje przeciążonego konstruktora",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Metoda czysto wirtualna to metoda bez implementacji/ciała.",
  },
  {
    question: "Metoda wirtualna…",
    url: "",
    a1: "Może być przedefiniowana w klasie pochodnej",
    a2: "Nie posiada definicji",
    a3: "Nigdy nie jest dziedziczona",
    a4: "Zawsze korzysta z rekurencji",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Metoda wirtualna to metoda, która może zostać nadpisana, ale nie musi.",
  },
  {
    question: "Metoda czysto wirtualna…",
    url: "",
    a1: "Nie posiada definicji",
    a2: "Nie zwraca",
    a3: "Nigdy nie jest dziedziczona",
    a4: "Zawsze korzysta z rekurencji",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Jest to metoda abstrakcyjna bez ciała. Metoda wirtualana może mieć ciało, które będzie nadpisane bądź nie.",
  },
  {
    question:
      "Jak wywołać metodę obiektu za pomocą wskaźnika wskazującego na ten obiekt?",
    url: "",
    a1: "wskaźnik->metoda();",
    a2: "wskaźnik.metoda();",
    a3: "metoda->wskaźnik();",
    a4: "metoda.wskaźnik();",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Jeżeli mamy do czynnienia ze wskaźnikiem to do jego składowych odwołujemy się za pomocą operatora "->"',
  },
  {
    question: "Na czym polega polimorfizm?",
    url: "",
    a1: "Wskaźnik/Referencję klasy bazowej można powiązać z obiektami klas pochodnych",
    a2: "Konstruktor klasy bazowej staje się wirtualny",
    a3: "Klasy pochodne są czysto abstrakcyjne",
    a4: "Wskaźnik klasy bazowej jest dziedziczony przez klasy pochodne",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Czy klasa pochodna dziedziczy z klasy bazowej konstruktor?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Konstruktory i destruktory nie są dziedziczone. Jednak klasa pochodna ma do nich dostęp (może je wywołać co jest zalecane).",
  },
  {
    question: "Czy klasa pochodna dziedziczy z klasy bazowej destruktor?",
    url: "",
    a1: "NIE",
    a2: "TAk",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Konstruktory i destruktory nie są dziedziczone. Jednak klasa pochodna ma do nich dostęp (może je wywołać co jest zalecane).",
  },
  {
    question:
      "Czy elementy statyczne klasy mają dostęp do elementów niestatycznych?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Aby odwołać się do zwykłego elementu klasy element statyczny potrzebuje instancji. Sam z siebie nie ma takiej możliwości.",
  },
  {
    question:
      "Czy elementy niestatyczne klasy mają dostęp do elementów statycznych?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Tak jest to możliwe. Elementy statyczne są przypisane do klasy.",
  },
  {
    question:
      "Czy setter może wykonywać dodatkową logikę oprócz ustawiania pola?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Tak. Przykład z cenami. Mamy prywatne pole cena brutto. Do niego mamy trzy gettery (netto, brutto, tara), które oprócz przypisania.",
  },
  {
    question:
      "Czy getter może wykonywać dodatkową logikę oprócz zwracania pola?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Tak. Przykład z cenami. Mamy prywatne pole cena brutto. Do niego mamy trzy gettery (netto, brutto, tara), które oprócz zwrócenia wykonują odpowiednie przeliczenie.",
  },
  {
    question: "Czy klasa może dziedziczyć sama z siebie?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Oczywiście, że nie.",
  },
  {
    question: "Czy w C# interfejs może zawierać pola?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Nie może. W C# interfejs oprócz metod może zwierać właściwości.",
  },
  {
    question: "Czy słowo kluczowe this może mieć wartość NULL?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Nie jest to możliwe.",
  },
  {
    question: 'Czy słowa kluczowego "this" można użyć w metodzie statycznej?',
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: 'Słowo kluczowe "this" odnosi się do danej instancji klasy. W przypadku statycznośc operujemy na elementach przypisanych do klasy a nie do obiektu. Nie ma więc mowy o this.',
  },
  {
    question: "Czy klasa może dziedziczyć sama z siebie?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Oczywiście, że nie",
  },
  {
    question: "Ile pól zawiera klasa na obrazku?",
    url: "/images/classtemplate.png",
    a1: "4",
    a2: "2",
    a3: "1",
    a4: "3",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Językiem obsługującym wieloklasowe dziedziczenie jest?",
    url: "",
    a1: "C++",
    a2: "C",
    a3: "C#",
    a4: "Javascript",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Tylko C++ obsługuje wieloklasowe dziedziczenie.",
  },
  {
    question: "Cztery filary programowania obiektowego to?",
    url: "",
    a1: "Dziedziczenie, Polimorfizm, Hermetyzacja, Abstrakcja",
    a2: "Public, Protected, Private, Interfejs",
    a3: "Public, Protected, Private, Implementacja",
    a4: "Konstruktor, Destruktor, Abstrakcja, Iteracja",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "W języku C# mamy operator == oraz funkcję Equals(). Na czym polega różnica między nimi?",
    url: "/iamges/equals.jpg",
    a1: "operator == porównuje tylko referencje a Equals() także zawartość obiektu",
    a2: "operator == porówuje zawartość obiektu a Equals() referencje",
    a3: "obie metody porównania są identyczne",
    a4: "wszystkie pozostałe",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Najważniejszą cechą klasy abstrakcyjnej jest:",
    url: "",
    a1: "brak możliwości stworzenia obiektu tej klasy",
    a2: "brak możliwości dziedziczenia z tej klasy",
    a3: "brak możliwości hemetyzacji tej klasy",
    a4: "brak możliwości dziedziczenia przez tę klasę",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  //C#
  {
    question: "Język C# jest podobny do języka?",
    url: "/images/csharp.jpeg",
    a1: "Java",
    a2: "Javascript",
    a3: "C",
    a4: "C++",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "C# to w wielu miejscach kopiuj wklej z Javy i odwrotnie.",
  },
  {
    question: "Każdy program napisany w C# musi mieć funkcję Main?",
    url: "/images/csharp.jpeg",
    a1: "Od .NET 6 nie każdy",
    a2: "Od .NET 6 każdy",
    a3: "Każdy oprócz programu webowego",
    a4: "Każdy oprócz programu konsolowego",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "W .NET 6 trochę na siłe uprościli zapis i nie ma już funkcji main. Plik bazowy wygląda jak np. skrypt w pytonie czy javascript.",
  },
  {
    question: "C# oferuje obsługę wskaźników?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: 'Tak, ale kod taki trzeba oznaczyć słowem kluczowym "unsafe"',
  },
  {
    question: "W C# funkcja main jest statyczna?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Tak jest. Przyjmuje argument w formie tablicy parametrów podawanych po spacji przy wywołaniu z konsoli nazwa.exe param1 param2 itd",
  },
  {
    question:
      "W C# typy referencyjne są usuwane z pamięci manualnie przez programistę?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Usuwaniem takich obiektów zajmuje się Garbage Collector.",
  },
  {
    question:
      "W C# typy referencyjne są usuwane z pamięci przez garbage collector?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Garbage Collector liczy ile jest aktywnych referencji na dany obiekt w pamięci. Jeżeli nie ma żadnej to go usuwa.",
  },
  {
    question: "Plik źródłowy języka C# ma rozszerzenie?",
    url: "",
    a1: ".cs",
    a2: ".cc",
    a3: ".c",
    a4: ".sc",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: 'W C# "Console.Write()" wstawia enter na końcu?',
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: 'Console.WriteLine() wstawia enter na końcu. Możemy jednak wrzucić do Write() string ze znakiem "\\n"',
  },
  {
    question: 'W C# "Console.WriteLine()" wstawia enter na końcu?',
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Console.WriteLine() wstawia enter na końcu. ",
  },
  {
    question: "W C# da się napisać metodę poza klasą?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "C# jest typowo obiektowym językiem. Nie da się napisać funkcji poza klasą.",
  },
  {
    question: "W C# da się napisać klasę w klasie?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Tak, możliwe jest pisanie klas w klasie. Klasy takie są dostępne tylko wewnątrz klasy nadrzędnej.",
  },
  {
    question:
      "Każda zmienna w C# przekazywana jest przez wartość do funkcji itp?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "W C# istnieją typy wartościowe oraz typy referencyjne. Jeżeli typ jest wartościowy to jego zmienna jest przekazywana przez wartość.",
  },
  {
    question:
      "W C# klasy i struktury są równoznaczne i zachowują się tak samo?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Klasy definują typy referencyjne. Struktury definują typy wartościowe.",
  },
  {
    question: "Struktura definuje typ referencyjny w języku C#?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "W C# struktury i klasy różnią się właśnie tym, że struktura definuje typ wartościowy a klasa referencyjny. Jeżeli zależy nam na przekazywaniu przez wartość to używamy struktur. Jeżeli chcemy referencje to klas.",
  },
  {
    question: "Klasa definuje typ referencyjny w języku C#?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "",
  },
  {
    question: "Delegat w języku C# to?",
    url: "",
    a1: "specjalny typ do przechowywania referencji na funckję",
    a2: "specjalny typ do przechowywania typów prostych",
    a3: "sepcjalny typ pełniący rolę iteratora po kolekcji",
    a4: "specjalny typ pełniący rolę wskaźnika do poruszania się po pliku",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Delegat to mechaniz podobny do wskaźników na funkcję w C/C++.",
  },
  {
    question: "Delegaty w C# to mechanizm podobny do wskaźników na funkcję?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Delegat to konstrukcja do przechowywania referencji na funkcje. Mechanizm ten jest podobny do wskaźników na funkcję.",
  },
  {
    question: "Delegaty w C# to typy referencyjne?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "",
  },
  {
    question: "Typem delegata w C# NIE jest?",
    url: "",
    a1: "Task<T>",
    a2: "Action<T>",
    a3: "Func<T>",
    a4: "Predicate<T>",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "",
  },
  {
    question: 'W C# delegat "Func<int, double, bool>" zwraca?',
    url: "",
    a1: "bool",
    a2: "double",
    a3: "int",
    a4: "nic",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Func to delegat do funkcji, które coś zwracają. Ostatni parametr generyczny mówi jaki to typ. Pozostałe typy to typy argumentów.",
  },
  {
    question: 'W C# delegat "Action<string, int, int>" zwraca?',
    url: "",
    a1: "nic",
    a2: "bool",
    a3: "int",
    a4: "string",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Action to delegat do funkcji, które nic nie zwracają (void). Wszytskie typy w nawiasie <> to typy argumentów.",
  },
  {
    question: 'W C# delegat "Predicate<int>" zwraca?',
    url: "",
    a1: "bool",
    a2: "double",
    a3: "int",
    a4: "nic",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Predicate zawsze zwraca typ bool.",
  },
  {
    question:
      "Typem danych wykorzystywanym do precyzyjnego przechowywania liczb ułamkowych w C# jest?",
    url: "",
    a1: "decimal",
    a2: "double",
    a3: "float",
    a4: "dynamic",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: 'Istnieje w C# różnica między zmienną typu "const" a "readonly"?',
    url: "/images/readonly",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: 'Zmienna "readonly" może zostać podmieniona przez konstruktor. To słowo kluczowe stosuje się do pól przechowujących obiekty zależności klasy (obrazek).',
  },
  {
    question:
      'Oznaczenie w C# klasy jako "sealed" blokuje możliwość dziedziczenia z niej?',
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: 'Słowo kluczowe "sealed" blokuje możliwość dziedziczenia z klasy.',
  },
  {
    question: "Aby poznać długość stringa w C# należy posłużyć się?",
    url: "",
    a1: ".Length",
    a2: ".Length()",
    a3: ".Count",
    a4: ".Count()",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Konstrukcja alokująca tablicę w C# to?",
    url: "",
    a1: "int[] tablica = new int[5];",
    a2: "int tablica[] = new int[5];",
    a3: "int[] tablica = new int(5);",
    a4: "int tablica[] = new int(5);",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Konstrukcja alokująca tablicę 2D w C# to?",
    url: "",
    a1: "int[,] tablica2 = new int[5,2];",
    a2: "int[][] tablica2 = new[5][2] int;",
    a3: "int[][] tablica2 = new int[5,2];",
    a4: "int[][] tablica2 = new[5][2] int;",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "[,] konstrukcja jest poprawna w C#. W C++ była by to konstrukcja [][].",
  },
  {
    question: "String w C# jest typem referencyjnym?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "",
  },
  {
    question: "Tablica w C# jest typem referencyjnym?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "",
  },
  {
    question: "List<T> w C# jest typem referencyjnym?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "List to klasa a klasy definiują typy referencyjne.",
  },
  {
    question: "Enum w C# jest typem referencyjnym?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "",
  },
  {
    question:
      "W C# typy referencyjne alokowane są na stercie a wartościowe na stosie?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Obiekt klasy zostanie zaalokowany za stercie, a obiekt struktury na stosie.",
  },
  {
    question: "W C# referencja na typ referencyjny i tak jest na stosie?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Obiekt typu referencyjnego tworzony jest na stercie, ale zmienna z adresem jest i tak na stosie jeżeli jest utworzona w funkcji.",
  },
  {
    question:
      "Boxing to proces sztuczengo opakowania typu wartościowego w typ referencyjny?",
    url: "/images/boxing.png",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Możemy na przykład zapakować inta do typu object. Dostajemy dzięki temu obiekt referencyjny.",
  },
  {
    question:
      "Właściwość w C# to odpowiednik gettera i settera z innych języków?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: 'Właściwości to "syntactic sugar" na zwykłe funkcyjne gettery i settery.',
  },
  {
    question:
      "Jeżeli właściwość w C# ma tylko zadeklarowaną opcję get to jest tylko getterem?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Jeżeli w dymku z podowiedzią widzimy tylko get to jest to tylko getter.",
  },
  {
    question:
      "Jeżeli właściwość w C# ma tylko zadeklarowaną opcję set to jest tylko setterem?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Jeżeli w dymku z podowiedzią widzimy tylko set to jest to tylko setter.",
  },
  {
    question:
      "Mechanizm pozwalający programowi czytać inforamcje o samym sobie to?",
    url: "",
    a1: "Refleksja",
    a2: "Lustro",
    a3: "Asemblacja",
    a4: "Instancjonowanie",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Reflekcje pozwalają na wiele jak np. czytanie prywatnych pól, czytanie listy plików w projekcie itp.",
  },
  {
    question:
      "Mechanizm pozwalający pisać w C# wydajne zapytania do kolekcji nazywany jest?",
    url: "",
    a1: "LINQ",
    a2: "LI",
    a3: "Enumerator",
    a4: "Enumerable",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "W C# interfejsy nazywa się zaczynając od litery I?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Taką konwencję przyjeli programiści C#.",
  },
  {
    question: "W C# List<T> nie różni się niczym od zwykłej tablicy?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Lista to typ na wyższym poziomie abstrakcji. Oferuje bogatsze API niż zwykła tablica.",
  },
  {
    question: "W C# List<T> to to samo co IEnumerable<T>?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "List dziedziczy z interfejsu IEnumerable. Jeżeli posługujemy się referencją typu IEnumerable możliwe jest odłożenie w czasie pewnych operacji na kolecji.",
  },
  {
    question: "Do czego służy metoda ToString() w C#?",
    url: "",
    a1: "Zwrócenia reprezentacji tekstowej obiektu",
    a2: "Parsowania obiektu na tekst",
    a3: "Zwrócenia nazwy obiektu",
    a4: "Zwrócenia typu obiektu",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "TO NIE JEST PARSOWANIE NA STRING",
  },
  {
    question:
      "Metoda klasy string, która sprawdza czy napis jest nullem lub jest pusty to?",
    url: "",
    a1: "IsNullOrEmpty()",
    a2: "NullOrEmpty()",
    a3: "IsEmpty()",
    a4: "IsNull()",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "IsNullOrEmpty() to statyczna składowa typu String. Dzięki niej nie musimy pisać ifów sprawdzających czy zmienna jest nullem lub ma długość 0",
  },
  {
    question:
      'Gdy "a = null" instrukcja "Console.WriteLine(a is { });" wypisze?',
    url: "",
    a1: "false",
    a2: "true",
    a3: "0",
    a4: "kompilacja skończy się błędem",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: '"a is {}" to odpowiednik "a != null"',
  },
  {
    question: "Słowo kluczowe służące do nadpisywania metod klasy bazowej to?",
    url: "",
    a1: "override",
    a2: "virtual",
    a3: "extern",
    a4: "static",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: 'Słowo kluczowe języka C# "async" w nagłówku funkcji oznacza?',
    url: "",
    a1: "operację asynchroniczą",
    a2: "operację synchroniczną",
    a3: "funkcję wywołania zwrotnego",
    a4: "funckję dotykającą UI",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Metoda taka jest asynchroniczna.",
  },
  {
    question: 'Słowo kluczowe języka C# "await" automatycznie powoduje?',
    url: "",
    a1: "że metoda staje się asynchroniczna",
    a2: "że metoda w danym miejscu może się zakończyć",
    a3: "że metoda otwiera w danym miejscu połączenie sieciowe",
    a4: "że metoda staje się synchroniczną",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Jeżeli w metodzie pada słowo kluczowe "await" to metoda staje się asynchroniczna. Trzeba ją oznaczyć jako metodę "async" albo popraostu zwrócić typ Task<T>.',
  },
  {
    question: "W C# typem zwracanym z metod asynchronicznych jest?",
    url: "",
    a1: "Task<T>",
    a2: "Future<T>",
    a3: "Promise<T>",
    a4: "Thread<T>",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "W C# jest to Task, w Dart Future, w JS Promise.",
  },
  {
    question: "W C# konwencja nazw stosuje zazwyczaj?",
    url: "",
    a1: "odmiany cammelCase",
    a2: "odmiany snake_case",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Testy w C# nazywa się snake_casem. cammelCase jest słabym rozwiązaniem gdy nazwa składa się z dużej ilości słów.",
  },
  {
    question:
      "Aby użyć wskaźników w C# należy oznaczyć funkcję słowem kluczowym?",
    url: "",
    a1: "unsafe",
    a2: "volatile",
    a3: "virtual",
    a4: "static",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Najczęściej dopisuje się "unsafe" do nagłówka funkcji np. "public static unsafe void Main(){}"',
  },
  {
    question: "Pojęcie statycznego polimorfizmu oznacza?",
    url: "",
    a1: "przeciążanie funkcji",
    a2: "nadpisywanie funkcji",
    a3: "dziedziczenie",
    a4: "wielokrotne dziedziczenie",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Chodzi o zwykłe przeciążanie funkcji (ta sama nazwa, różne argumenty).",
  },
  {
    question: "Słowo kluczowe służące do napisywania metod klasy bazowej to?",
    url: "",
    a1: "override",
    a2: "virtual",
    a3: "extern",
    a4: "static",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Referencja w porównaniu do wskaźnika?",
    url: "",
    a1: "nie pozwala na arytmetykę na adresie",
    a2: "pozwala na arytmetykę na adresie",
    a3: "jest konstrukcją składniową",
    a4: "oznacza obiekt jako stałą",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Referencja jest dużo bezpieczniejsza. Większość błędów bezpieczeństwa w oprogramowaniu wywodzi się z niepoprawnego użycia wskaźników lub innego niedopatrzenia z nimi związanego.",
  },
  {
    question: "Która pętla nie jest dostępna w C#?",
    url: "",
    a1: "for(auto el in collection){}",
    a2: "foreach(var el in collection){}",
    a3: "while(a > 0) {}",
    a4: "for(int i = 0;i<10;i++){}",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Interpolacji stringów w C# można dokonać składnią?",
    url: "",
    a1: '$"Ala ma {count} kotów!"',
    a2: 'f"Ala ma {count} kotów!"',
    a3: '#"Ala ma {count} kotów!"',
    a4: '&"Ala ma {count} kotów!"',
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Jest to element języka eliminujący formatowanie stringów za pomocą ich konkatenacji ze zmiennymi.",
  },
  {
    question: "Na obrazku zaznaczono",
    url: "/images/attribute.png",
    a1: "atrybuty",
    a2: "modyfikatory",
    a3: "tagi",
    a4: "tokeny",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Atrybut, atrybuty takie w C# można definiować samemu poprzez stworzenie klasy dziedziczącej z "System.Attribute".',
  },
  {
    question:
      'W C# za operacje na plikach odpowiada między innymi klasa "File"?',
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "",
  },
  {
    question:
      'W C# wyjątek "DirectoryNotFoundException" rzucany np. przez "File.Create()" oznacza?',
    url: "",
    a1: "że nie można znaleźć katalogu, składowego scieżki",
    a2: "ścieżka jest w niepoprawnym formacie",
    a3: "ścieżka jest nullem",
    a4: "plik już istnieje",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      'W C# za operacje na katalogach odpowiada między innymi klasa "Directory"?',
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "",
  },
  {
    question:
      "Dobrą praktyką jest sprawdzenie czy katalog/plik istnieje przed wykonaniem na nim operacji?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Nie każda funkcja zrobi to za nas, a jeżeli tego nie zrobi to możemy spodziewać się wyjątku.",
  },
  //WPF/XAMARIN/ASP.NET
  {
    question: 'Skrót "WPF" oznacza?',
    url: "",
    a1: "Windows Presentation Foundation",
    a2: "Windows Power Framework",
    a3: "Windows Presentation Framework",
    a4: "Windows Power Foundation",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Do budowania układu siatki w WPF i Xamarin służy tag?",
    url: "",
    a1: "GRID",
    a2: "TABLE",
    a3: "COLUMN",
    a4: "ROW",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "W WPF oraz Xamarin do elementów interfejsu odwołujemy się za pomocą?",
    url: "",
    a1: "atrybutu name",
    a2: "atrybutu id",
    a3: "atrybutu class",
    a4: "atrybutu title",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Język do budowania interfejsu użytkownika w WPF oraz Xamarin nazywa się?",
    url: "",
    a1: "XAML",
    a2: "XML",
    a3: "Blazor",
    a4: "Razor",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "W WPF niedostępny jest layout typu?",
    url: "",
    a1: "TablePanel",
    a2: "StackPanel",
    a3: "DockPanel",
    a4: "Wszystkie wymienione",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "W WPF dostępnym typem layoutu jest?",
    url: "",
    a1: "Wszystkie wymienione",
    a2: "CanvasPanel",
    a3: "StackPanel",
    a4: "DockPanel",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Aby w WPF można było przypisać element do pola siatki GRID element musi być umieszczony wewnątrz bloku <Grid></Grid>?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "",
  },
  {
    question:
      'Aby w WPF można było przypisać element do kolumny siatki należy posłużyć się atrybutem "Grid.Column"?',
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "",
  },
  {
    question:
      'Aby w WPF można było połączyć kolumny siatki należy posłużyć się atrybutem "Grid.ColSpan"?',
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Analogia do tabel w HTML.",
  },
  {
    question:
      'Aby w WPF można było połączyć wierwsze siatki należy posłużyć się atrybutem "Grid.RowSpan"?',
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Analogia do tabel w HTML.",
  },
  {
    question:
      "Rozszerzenie pliku, w którym definiujemy interfejs użytkownika dla aplikacji Xamarin/WPF to?",
    url: "",
    a1: "*.xaml",
    a2: "*.xml",
    a3: "*.xml.cs",
    a4: "*.xaml.cs",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  //GIT
  {
    question:
      'Polecenie "git reset --hard" oraz git reset --soft" działają tak samo?',
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: 'Hard powoduje całkowitą utratę zmian. Soft zostawia zmiany jako "dodane". Mixed zostawia zmiany jako "do dodania."',
  },
  {
    question:
      "Plik służący do tworzenia listy plików/katalogów, które są ignorowane przez system kontroli wersji git jest?",
    url: "",
    a1: ".gitignore",
    a2: ".gitattribute",
    a3: ".gitsettings",
    a4: ".gitconfig",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      'Polecenie "git stash" cofa projekt do ostatniego commita a zmiany są tracone?',
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: 'Polecenie to cofa do ostatniego commita, ale zmiany są odkładane na bok, możemy je przywrócić poleceniem "git stash pop".',
  },
  {
    question:
      "Aby w systemie git przeglądać historie commitów należy posłużyć się poleceniem?",
    url: "",
    a1: "git log",
    a2: "git status",
    a3: "git stash",
    a4: "git diff",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Polecenie systemu GIT dodające wszystkie pliki na stage to?",
    url: "",
    a1: "git add .",
    a2: "git add *",
    a3: "git add $",
    a4: "git add all",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Nie zaleca się używania "git add ." jeżeli w projekcie nie ma pliku ".gitignore".',
  },
  {
    question:
      "Aby w systemie git stwierdzić jakie pliki zostały zmodyfikowane od ostatniego commita należy użyć polecenia?",
    url: "",
    a1: "git status",
    a2: "git log",
    a3: "git stash",
    a4: "git rebase",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Ewentualnie polecenie "git diff" może nam pokazać precyzyjnie co i gdzie zostało zmienione.',
  },
  {
    question: "Inicjalizacja repozytorium lokalnego git odbywa się poleceniem?",
    url: "",
    a1: "git init",
    a2: "git start",
    a3: "git add",
    a4: "git rebase",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Commita w systemie GIT wykonujemu poleceniem?",
    url: "",
    a1: 'git commit -m "Message"',
    a2: 'git commit -log "Message"',
    a3: 'git commit message "Message"',
    a4: 'git add commit -m "Message"',
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Jeżeli nie użyjemy przełącznika "-m" GIT użyje domyślnego edytora tekstu aby zapytać nas o komentarz.',
  },
  {
    question: "Nową gałąź w systemie GIT tworzymy poleceniem?",
    url: "",
    a1: 'git branch "nazwa"',
    a2: 'git checkout "nazwa"',
    a3: 'git link "nazwa"',
    a4: 'git add branch "nazwa"',
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Gałąź w systemie GIT usuwamy poleceniem?",
    url: "",
    a1: 'git branch -d "nazwa"',
    a2: 'git delete "nazwa"',
    a3: 'git drop "nazwa"',
    a4: 'git gone "nazwa"',
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Przełączanie gałęzi w systemie git odbywa się za pomocą?",
    url: "",
    a1: 'git checkout "nazwa"',
    a2: 'git branch "nazwa"',
    a3: 'git switch "nazwa"',
    a4: 'git load "nazwa"',
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "W git odnośnik do zdalnego repozytorium dodajemy poleceniem?",
    url: "",
    a1: 'git remote add origin "link"',
    a2: 'git remote add "link"',
    a3: 'git add remote "link"',
    a4: 'git add remote origin "link"',
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "W git odnośnik do zdalnego repozytorium usuwamy poleceniem?",
    url: "",
    a1: "git remote remove origin",
    a2: "git remote remove",
    a3: "git remove remote",
    a4: "git remove remote origin",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Wypychanie zmian do zdalnego repozytorium z poziomu konsoli GIT odbywa się poleceniem?",
    url: "",
    a1: "git push origin nazwa_brancha",
    a2: "git push nazwa_brancha",
    a3: "git pull origin nazwa_brancha",
    a4: "git remote push nazwa_brancha",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Pobieranie zmian ze zdalnego repozytorium z poziomu konsoli GIT odbywa się poleceniem?",
    url: "",
    a1: "git pull origin nazwa_brancha",
    a2: "git fetch nazwa_brancha",
    a3: "git get origin nazwa_brancha",
    a4: "git sync push nazwa_brancha",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Cofanie zmian wprowadzonych w konretnym commicie odbywa się poleceniem?",
    url: "",
    a1: "git revert",
    a2: "git restore",
    a3: "git reset",
    a4: "git rewind",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Portal GITHUB to to samo co GIT?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "GITHUB to portal do przechowywania repozytoriów. Dzięki portalą takim jak GITHUB możliwa jest współpraca wielu programistów poprzez GIT.",
  },
  {
    question:
      'Pojęcie "fork" oznacza w terminologi GIT połączenie dwóch gałęzi?',
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: 'Pojęcie "fork" oznacza stworznie własnej kopi projektu na bazie czyjegoś repozytorium na githubie.',
  },
  {
    question: "Aby połączyć gałęzie w GIT należy użyć polecenia?",
    url: "",
    a1: 'git merge "nazwa"',
    a2: 'git rebase "nazwa"',
    a3: 'git checkout "nazwa"',
    a4: 'git load "nazwa"',
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  //testy jednostkowe
  {
    question: "Testy jednostkowe to?",
    url: "",
    a1: "wszystkie wymienione",
    a2: "kod testujący inny kod",
    a3: "kod werfikujący wynik działania metod",
    a4: "kod wywołujący testowany kod w kontrolowanych warunkach",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Testy jednostkowe powinny być?",
    url: "",
    a1: "wszystkie wymienione",
    a2: "szybkie",
    a3: "niezależne od siebie",
    a4: "powtarzalne",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Akronim FIRST oznacza?",
    url: "",
    a1: "Fast/Isolated/Repeatable/Self-validating/Timely",
    a2: "Fast/Isolated/Recursive/Self-validating/Timely",
    a3: "Fast/Iterable/Repeatable/Self-validating/Timely",
    a4: "Fast/Isolated/Repeatable/Self-validating/Throwable",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Testy jednostkowe składają się z trzech głównych faz w kolejności?",
    url: "",
    a1: "arrange/act/assert",
    a2: "assert/arrange/act",
    a3: "assert/act/arrange",
    a4: "act/assery/arrange",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Arrange przygotowuje kod testowany, Act wykonuje testowaną akcję, Assert porównuje wynik z wartością oczekiwaną.",
  },
  {
    question: "Frameworkiem do pisania testów jednostkowych w języku C++ jest?",
    url: "",
    a1: "Google Tests",
    a2: "JUnit",
    a3: "NUnit",
    a4: "XUnit",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Frameworkiem do pisania testów jednostkowych w języku C# jest?",
    url: "",
    a1: "XUnit",
    a2: "PyTest",
    a3: "JUnit",
    a4: "Google Tests",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Można jeszcze używać NUnita.",
  },
  {
    question:
      "Modułem umożliwiającym testy w jezyku JavaScript i środowisku NodeJS jest?",
    url: "",
    a1: "jest",
    a2: "jtest",
    a3: "ntest",
    a4: "google tests",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Błędnym stwierdzeniem o klasie Assert w języku C# jest to, że?",
    url: "",
    a1: "Refaktoryzuje kod",
    a2: "Sprawdza prawdziwość danego wyrażenia",
    a3: "Wykorzystuje się ją przy testowaniu",
    a4: "Udostępnia metody statyczne",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Assert to zestaw metod porównujących/testujących.",
  },
  {
    question: "TDD (Test Driven Development) to?",
    url: "/images/TDD.png",
    a1: "Metodologia pisania oprogramowania gdzie testy pisze się przed kodem testowanym",
    a2: "Wzorzec projektowy",
    a3: "Metodologia pisania oprogramowania gdzie testy wykorzystuje się do dokumentowania kodu",
    a4: "Żadne z wymienionych",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "TDD to takie na pierwszy rzut oka dziwne podejście, które polega na tym by najpierw wymyślić test do nieistniejącego kodu a późnej sam kod. Jak się tego poużywa to nabiera to więcej sensu.",
  },
  {
    question: "W TDD najpierw piszemy testy a później testowany kod?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "W TDD najpierw piszemy test do kodu, który nie istnieje a później sam kod. Nabiera to więcej sensu jak się w tym troche popisze :)",
  },
  {
    question: '"Mock" to pojęcie określające?',
    url: "",
    a1: "atrapę obiektu",
    a2: "pewien rodzaj asercji",
    a3: "tag oznaczający metodę jako test",
    a4: "żaden z wymienionych",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Atrapa obiektu, służy do pomijania pewnych funkcjonalności. Jeżeli klasa A korzysta z klasy B w formie zależności w czasie testu możemy podrzucić do A atrapę B by część kodu znajdująca się w klasie B nie wykonała się.",
  },
  {
    question: '"Mock" tworzony jest w celu?',
    url: "",
    a1: "wszystkie pozostałe",
    a2: "wyłączenia cześci kodu znajdującego się w klasie, której atrapę tworzymy",
    a3: "zmiany zachowania pewnego kodu, który wykorzystuje jako zależność klasę, której atrapę tworzymy",
    a4: "wygenerowania pustej implementacji jakiegoś interfesju polimorficznego",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Atrapa obiektu, służy do pomijania pewnych funkcjonalności. Jeżeli klasa A korzysta z klasy B w formie zależności w czasie testu możemy podrzucić do A atrapę B by część kodu znajdująca się w klasie B nie wykonała się.",
  },
  {
    question: "Nie powinno się testować automatycznie kontrolerów MVC?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Metody kontrolera przyjmują żądanie, wywołują jakąś logike i zwracają status lub widok. Testujemy bezpośrednio logikę.",
  },
  {
    question:
      "Nie powinno się testować funkcji podpinanych pod eventy/callbacki GUI?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Takie funkcję powinny tylko wywoływać logikę znajującą się w innych funkcjach. Powinniśmy testować te inne funkcje.",
  },
  {
    question: "Każda metoda klasy powinna być przetestowana automatycznie?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Im więcej testów tym lepiej. Ale nie testujemy prywatnych rzeczy oraz metod, które są trywialne.",
  },
  {
    question: "Da się przetestować bezpośrednio metody prywatne?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Nie powinno się testować metod prywatnych bezpośrednio, co nie oznacza, że się nie da.",
  },
  //wzorce i zasady programowania
  {
    question: "Zasada, mówiąca o tym by unikać powtórzeń w kodzie to?",
    url: "",
    a1: "DRY",
    a2: "KISS",
    a3: "YAGNI",
    a4: "SOLID",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "DRY - Dont Repeat Yourself, KISS - Keep It Simple Stupid, YAGNI - You Arent Gona Need It, SOLID - 5 zasad programowania obiektowego",
  },
  {
    question:
      "Zasada mówiąca o tym by utrzymywać kod w jak najprostszej formie to?",
    url: "",
    a1: "KISS",
    a2: "DRY",
    a3: "YAGNI",
    a4: "SOLID",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "KISS - Keep It Simple Stupid, DRY - Dont Repeat Yourself, YAGNI - You Arent Gona Need It, SOLID - 5 zasad programowania obiektowego",
  },
  {
    question:
      "Zasada mówiąca o tym by nie zostawiać w kodzie nieużywanych fragmentów implementacji?",
    url: "",
    a1: "YAGNI",
    a2: "KISS",
    a3: "DRY",
    a4: "SOLID",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "YAGNI - You Arent Gona Need It, KISS - Keep It Simple Stupid, DRY - Dont Repeat Yourself, SOLID - 5 zasad programowania",
  },
  {
    question: "Zbiór pięciu zasad dobrego kodu obiektowego to?",
    url: "",
    a1: "SOLID",
    a2: "FIRST",
    a3: "YAGNI",
    a4: "CQRS",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Pierwsza zasada SOLID mówi o tym by?",
    url: "",
    a1: "każda metoda/klasa zajmowała się jedną konretną rzeczą",
    a2: "referencje miały typ bazowy a nie typ pochodny",
    a3: "każda klasa/metoda była otwarta na rozszerzenie a zamknięta na modyfikację",
    a4: "interfejsy polimorficzne utrzymywać jak najmniejsze",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Każda metoda powinna zajmować się jedną konretną rzeczą, na którą wskazuje jej nazwa. Podobnie sytuacja wygląda z całymi klasami.",
  },
  {
    question: "Druga zasada SOLID mówi o tym by?",
    url: "",
    a1: "każda klasa/metoda była otwarta na rozszerzenie a zamknięta na modyfikację",
    a2: "każda metoda/klasa zajmowała się jedną konretną rzeczą",
    a3: "referencje miały typ bazowy a nie typ pochodny",
    a4: "interfejsy polimorficzne utrzymywać jak najmniejsze",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Rozszerzając klasę/metodę o nowe funkcjonalności nie powinniśmy modyfikować istniejących już w niej elementów. Jeżeli musimy to zrobić to trzeba wziąźć pod uwagę fakt, że coś można było zrobić lepiej.",
  },
  {
    question: "Piąta zasada SOLID mówi o tym by?",
    url: "",
    a1: "interfejsy polimorficzne utrzymywać jak najmniejsze",
    a2: "każda klasa/metoda była otwarta na rozszerzenie a zamknięta na modyfikację",
    a3: "każda metoda/klasa zajmowała się jedną konretną rzeczą",
    a4: "referencje miały typ bazowy a nie typ pochodny",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Jeżeli klasa B dziedziczy z klasy A to obiekt powinniśmy trzymać w referencji typu A np. "A obj = new B()".',
  },
  {
    question: "Piąta zasada SOLID nazywana jest?",
    url: "",
    a1: "dependency inversion",
    a2: "dependency injection",
    a3: "dependency infection",
    a4: "dependency isolation",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Chodzi w tym przypadku o inwersję a nie wstrzykiwanie.",
  },
  {
    question:
      "Zasada SOLID mówiąca, że zamiast jednej klasy zawierającej 2000 linii kodu lepsze jest 20 małych klas?",
    url: "",
    a1: "S",
    a2: "L",
    a3: "I",
    a4: "O",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Single Responsiblity Principle - zasad pojedynczej odpowiedzialności",
  },
  {
    question: "We wzorcu MVC na akcje użytkownika reaguje?",
    url: "",
    a1: "kontroler",
    a2: "widok",
    a3: "model",
    a4: "UI",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Kontroler zajmuje się sterowaniem i przetwarzaniem żądań.",
  },
  {
    question: "Pochodną wzorca MVC jest?",
    url: "",
    a1: "wszystkie wymienione",
    a2: "MVVM Model View ViewModel",
    a3: "HMVC Hierarchical Model View Controller",
    a4: "MVP Model View Presenter",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Skrót SPA oznacza?",
    url: "",
    a1: "Single-Page Application",
    a2: "Simple-Page Application",
    a3: "Super-Page Application",
    a4: "Super-Pure Application",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "SPA wczytuje całą strone do przeglądarki a później tylko odświeża swoje bloki komunikując się najczęściej z REST API.",
  },
  {
    question: "Strona typu SPA bazuje na?",
    url: "",
    a1: "przeładowywaniu pojedynczych elementów strony",
    a2: "zakładkach i podstronach",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "SPA wczytuje całą strone do przeglądarki a później tylko odświeża swoje bloki komunikując się najczęściej z REST API.",
  },
  {
    question: "Skrót ORM rozwija się?",
    url: "",
    a1: "Object Relational Mapping",
    a2: "Object Reconstruct Mapping",
    a3: "Object Relational Model",
    a4: "Object Relational Macro",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "ORM to biblioteka, która mapuje tabele na klasy a rekordy na obiekty. W wyniku zapytania SELECT dostajemy listę obiektów odpowiedniej klasy.",
  },
  {
    question: "Przykładem biblioteki typu ORM nie jest?",
    url: "",
    a1: "NSubstitude",
    a2: "Entity Framework",
    a3: "NHiberante",
    a4: "PDO",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "NSubstitude to biblioteka do tworzenia mocków w C#.",
  },
  {
    question:
      'Zasada "dependency injection" mówi, żeby zależności wstrzykiwać z zewnątrz przez?',
    url: "",
    a1: "wszystkie pozostałe",
    a2: "konstruktor",
    a3: "setter",
    a4: "pole",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Najczęściej konstruktory, ale można również wstrzykiwać zależności przez setter lub pole (łamiemy zasadę hermetyzacji).",
  },
  {
    question: "Na obrazku klasa Repository jest dla klasy Server?",
    url: "/images/repo.png",
    a1: "Zależnością miękką",
    a2: "Zależnością twardą",
    a3: "Klasą pochodną",
    a4: "żadne z wymienionych",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Na obrazku klasa RepositoryMock jest dla klasy Repository?",
    url: "/images/repo.png",
    a1: "Klasą pochodną",
    a2: "Zależnością miękką",
    a3: "Zależnością twardą",
    a4: "żadne z wymienionych",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Typ Repository może zostać określony mianem typu abstrakcyjnego?",
    url: "/images/repo.png",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "",
  },
  {
    question: "UML to skrót od?",
    url: "",
    a1: "Unified Modeling Language",
    a2: "Unified Mapping Language",
    a3: "Universal Modeling Language",
    a4: "Universal Mapping Language",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "UML to standard wielu diagramów, które służą do projektowania i dokumentowania oprogramowania.",
  },
  {
    question: "Diagram UML przedstawiający relacje między klasami to",
    url: "",
    a1: "Diagram klas",
    a2: "Diagram ERD",
    a3: "Diagram sekwencji",
    a4: "Diagram aktywności",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Diagram ERD służy do przedstawiania budowy baz danych. Diagram sekwencji i aktywności opisuje działanie aplikacji.",
  },
  {
    question:
      "Diagram UML przedstawiający relacje między tabelami bazy danych to",
    url: "",
    a1: "Diagram ERD",
    a2: "Diagram klas",
    a3: "Diagram sekwencji",
    a4: "Diagram aktywności",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Diagram klas przedstawia relacje między klasami. Diagram sekwencji i aktywności opisuje działanie aplikacji.",
  },
  {
    question: "Diagram UML przedstawiający przepływ sterowania w klasach to",
    url: "",
    a1: "Diagram sekwencji",
    a2: "Diagram ERD",
    a3: "Diagram klas",
    a4: "Diagram aktywności",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Diagram UML przedstawiający funkcjonalności projektu to",
    url: "",
    a1: "Diagram przypadków użycia",
    a2: "Diagram ERD",
    a3: "Diagram klas",
    a4: "Diagram aktywności",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Diagram UML na ilustracji to?",
    url: "/images/usagediagram.png",
    a1: "Diagram przypadków użycia",
    a2: "Diagram ERD",
    a3: "Diagram klas",
    a4: "Diagram aktywności",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Diagram UML na ilustracji to?",
    url: "/images/sekdiagram.png",
    a1: "Diagram sekwencji",
    a2: "Diagram ERD",
    a3: "Diagram klas",
    a4: "Diagram aktywności",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "W diagramie klas UML pola protected oznacza się symbolem?",
    url: "",
    a1: "#",
    a2: "-",
    a3: "+",
    a4: "@",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "+ oznacza elementy publiczne, # elementy chronione, - elementy prywatne",
  },
  {
    question: "W diagramie klas UML pola private oznacza się symbolem?",
    url: "",
    a1: "-",
    a2: "#",
    a3: "+",
    a4: "@",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "+ oznacza elementy publiczne, # elementy chronione, - elementy prywatne",
  },
  {
    question: "W diagramie klas UML pola public oznacza się symbolem?",
    url: "",
    a1: "+",
    a2: "#",
    a3: "-",
    a4: "@",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "+ oznacza elementy publiczne, # elementy chronione, - elementy prywatne",
  },
  {
    question:
      "Języki, w których programista definuje co chce uzyskać to języki?",
    url: "",
    a1: "deklaratywne",
    a2: "imperatywne",
    a3: "obiektowe",
    a4: "proceduralne",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Języki, w których programista definuje jak chce uzyskać wynik to języki?",
    url: "",
    a1: "imperatywne",
    a2: "deklaratywne",
    a3: "obiektowe",
    a4: "proceduralne",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  //http rest ect
  {
    question: "Skrót HTTP rozwija się?",
    url: "",
    a1: "Hypertext Transfer Protocol",
    a2: "Hypermarkup Transfer Protocol",
    a3: "HTML Transfer Protocol",
    a4: "Hyper Transfer Protocol",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Protokół HTTP pracuje na porcie?",
    url: "",
    a1: "80",
    a2: "60",
    a3: "21",
    a4: "100",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "HTTPS pracuje na 443",
  },
  {
    question: "Dane przekazywane do protokoły HTTP/HTTPS są w formacie?",
    url: "",
    a1: "wszystkie wymienione",
    a2: "JSON",
    a3: "XML",
    a4: "zwykłego tekstu",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Dane obierane i wysyłane przez HTTP to zawsze tekst. Co w tym tekście jest to inna kwestia.",
  },
  {
    question:
      "Metodą protokołu HTTP/HTTPS odpowiedzialną za pobieranie danych jest?",
    url: "",
    a1: "GET",
    a2: "PUT",
    a3: "POST",
    a4: "HEAD",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Metodą protokołu HTTP/HTTPS odpowiedzialną za wysyłanie danych jest?",
    url: "",
    a1: "POST",
    a2: "PUT",
    a3: "GET",
    a4: "HEAD",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Metodą protokołu HTTP/HTTPS odpowiedzialną za aktualizowanie danych jest?",
    url: "",
    a1: "PUT",
    a2: "POST",
    a3: "GET",
    a4: "HEAD",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Metodą protokołu HTTP/HTTPS odpowiedzialną za usuwanie danych jest?",
    url: "",
    a1: "DELETE",
    a2: "REMOVE",
    a3: "POST",
    a4: "PATCH",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Kod sukcesu HTTP/HTTPS to?",
    url: "",
    a1: "200",
    a2: "300",
    a3: "400",
    a4: "500",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: 'Kod "nie znaleziono" HTTP/HTTPS to?',
    url: "",
    a1: "404",
    a2: "202",
    a3: "400",
    a4: "102",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "JWT to skrót od?",
    url: "",
    a1: "JSON Web Token",
    a2: "JavaScript Web Token",
    a3: "Java Web Token",
    a4: "JavaScript Web Type",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "JWT służy do autoryzacji/logowania do stron za pomocą REST API.",
  },
  {
    question: "API typu REST wymienia dane w formacie zwanym?",
    url: "",
    a1: "JSON",
    a2: "XML",
    a3: "HTML",
    a4: "JWT",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Chodzi o format JSON, który jest dużo lżejszy niż XML.",
  },
  {
    question: "REST to skrót od?",
    url: "",
    a1: "Representational State Transfer",
    a2: "Representational Schema Transfer",
    a3: "Representational State Transmision",
    a4: "Representational Schema Transmision",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Programem do testowania REST API jest?",
    url: "",
    a1: "Postman",
    a2: "TeamViewer",
    a3: "Putty",
    a4: "HxDView",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Postman to wygodne narzędzie do testowania API.",
  },
  {
    question: "Protokół HTTPS to HTTP stosujący szyfrowanie?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "W zwykłym HTTP wszystko wysyłane jest gołym tekstem. Narzędzia takie jak WireShark pozwalają podejrzeć zawartość pakietu.",
  },
  //technologie webowe
  {
    question: "Wirus, który podszywa się pod legalny i bezpieczny program to?",
    url: "",
    a1: "Koń trojański",
    a2: "Robak",
    a3: "Ransomware",
    a4: "Spyware",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Atakiem na strony internetowe polegającym na ociążeniu serwera dużą ilością zapytań jest",
    url: "",
    a1: "DDoS",
    a2: "XSS",
    a3: "Hijacking",
    a4: "Phishing",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Podatność stron internetowych polegająca na wstrzykiwaniu własnego kodu do strony to?",
    url: "",
    a1: "XSS",
    a2: "SQL Injection",
    a3: "Hijacking",
    a4: "Session poisoning",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Jeżeli nie filtrujemy odpowiednio danych wejsciowych ktoś może podać w formularzu kod JavaScript, który w pewnych sytuacjach/zależnie od logiki aplikacji może coś zrobić.",
  },
  {
    question:
      "Dodanie zapytania SQL do istniejącego już zapytania nazywane jest?",
    url: "",
    a1: "SQL Injection",
    a2: "XSS",
    a3: "Hijacking",
    a4: "Session poisoning",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Bardzo trudny atak do wykonania w dzisiejszych czasach. Wyobraźmy sobie, że hasło z formularza HTML jest doklejane jako string do zapytania SQL w klauzuli WHERE. Co się stanie jak ktoś wpisze w pole z hasłem jakieś dziwne zapytanie SQL?",
  },
  {
    question:
      "Atakiem polegającym na zmuszeniu przeglądarki ofiary do wykonania pewnej akcji jest?",
    url: "",
    a1: "CSRF",
    a2: "XSS",
    a3: "CQRS",
    a4: "ASMAX",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Językiem typowo server-side jest?",
    url: "",
    a1: "PHP",
    a2: "JavaScript",
    a3: "C#",
    a4: "CSS",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "PHP da się uruchomić tylko z pomocą serwera APACHE. Oczywiście nie potrzebujemy fizycznego serwera, poniważ mamy XAMPA oraz UsbWebServer.",
  },
  {
    question: "Bootstrap to?",
    url: "",
    a1: "framework z gotowymi stylami CSS",
    a2: "framework do sprawniejszego manipulowania elementami drzewa DOM",
    a3: "framework do operacji asynchronicznych w JS",
    a4: "framework do operacji na REST API w JS",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Bootstrap bazuje na selektorach?",
    url: "",
    a1: "klasy",
    a2: "id",
    a3: "nazwy",
    a4: "atrybutu",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "W BootStrap kontenerem ze stałą szerokością jest?",
    url: "",
    a1: ".container",
    a2: ".container-fixed",
    a3: ".container-fluid",
    a4: ".container-static",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "W BootStrap system siatki bazuje na _ kolumnach?",
    url: "",
    a1: "12",
    a2: "16",
    a3: "12",
    a4: "10",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "W BootStrap klasą nadającą tabeli tak zwany styl zebry (w paski) jest?",
    url: "",
    a1: ".table-striped",
    a2: ".table-zebra",
    a3: ".table-bordered",
    a4: ".table-mixed",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Chodzi o styl, gdzie co drugi wiersz ma delikatni mocniejszy cień.",
  },
  {
    question: "W BootStrap klasą nadającą tabeli obramowanie jest?",
    url: "",
    a1: ".table-bordered",
    a2: ".table-bold",
    a3: ".table-striped",
    a4: ".table-border",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "W BootStrap klasą nadającą elementowy <div> styl przypominający powiadomienie jest?",
    url: "",
    a1: ".alert-xxx",
    a2: ".notice-xxx",
    a3: ".warning-xxx",
    a4: ".info-xxx",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "W BootStrap klasą tworzącą ciemny pasek nawigacyjny jest?",
    url: "",
    a1: ".navbar-inverse",
    a2: ".navbar-dark",
    a3: ".navbar-black",
    a4: ".navbar-default",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "W BootStrap pluginem do tworzenia wyskakujących okienek jest?",
    url: "",
    a1: "Modal",
    a2: "MessageBox",
    a3: "Window",
    a4: "Popup",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "W BootStrap klasa tworząca przycisk w kolorze czerwonym to?",
    url: "",
    a1: "btn-danger",
    a2: "btn-warning",
    a3: "btn-secondary",
    a4: "btn-primary",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "W BootStrap klasa tworząca przycisk z samym obramowaniem to?",
    url: "",
    a1: ".btn-outline-primary",
    a2: ".btn-primary-outline",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "",
  },
  {
    question: "W BootStrap wymaga do działania biblioteki jQuery?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Obecne wersje radzą sobie bez jQuery",
  },
  //javascript
  {
    question:
      "Biblioteką Javascript, która służy do asynchronicznej komunikacji z serwerem?",
    url: "",
    a1: "AJAX",
    a2: "jQuery",
    a3: "Vue.js",
    a4: "Angular",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Biblioteką Javascript, która ułatwia manipulowanie drzewem DOM jest?",
    url: "",
    a1: "jQuery",
    a2: "AJAX",
    a3: "React",
    a4: "Angular",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "JavaScript pozwala przypisać funkcję do zmiennej?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Oczywiście np. w formie wyrażenia lambda.",
  },
  {
    question: "W JS typami prymitywnymi są",
    url: "",
    a1: "wszystkie wymienione",
    a2: "String",
    a3: "Number",
    a4: "Boolean",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: 'W JS operatory "===" oraz "==" działają tak samo?',
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "",
  },
  {
    question: 'W JS pętle "for in" oraz "for of" działają tak samo?',
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: 'Pętla "for in" zwraca indeks a "for of" zwraca wartośc z kolekcji.',
  },
  {
    question: "Pobranie długości tablicy w JavaScript wygląda następująco?",
    url: "",
    a1: "let size = tablica.length;",
    a2: "let size = tablica.length();",
    a3: "let size = tablica.count;",
    a4: "let size = tablica.size;",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: 'Funkcja "Math.random()" zwraca?',
    url: "",
    a1: "wartość z przedziału 0 do 1",
    a2: "wartość z przedziału 0 do +inf",
    a3: "wartość z przedziału 0 do RAND_MAX",
    a4: "wartość z przedziału 0 do 10",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Interpolacja stringa w języku JavaScript odbywa się za pomocą składni?",
    url: "",
    a1: "`Ala ma ${count} kotów`",
    a2: "'Ala ma ${count} kotów'",
    a3: '"Ala ma ${count} kotów"',
    a4: "w JS nie ma takiego mechanizmu",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Aplikacje Web wykonane we frameworku Angular lub bibliotece React i działające na domyślnych ustawieniach portów można uruchomić na lokalnym serwerze, wpisując w przeglądarce?",
    url: "",
    a1: "localhost:3000 (React) lub localhost:4200 (Angular)",
    a2: "localhost:8080 (React) lub localhost:8000 (Angular)",
    a3: "localhost:5001 (React) lub localhost:8080 (Angular)",
    a4: "localhost:8000 (React) lub localhost:49887 (Angular)",
    tag: "OFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: 'Który z testów funkcji "fun1" zakończy się sukcesem?',
    url: "/images/jesttests.png",
    a1: "C",
    a2: "D",
    a3: "B",
    a4: "A",
    tag: "OFICJALNE",
    type: "4A",
    desc: "",
  },
  //bazy danych
  {
    question: "Co to jest DBMS",
    url: "",
    a1: "system zarządzania bazą danych",
    a2: "obiektowy język programowania",
    a3: "kaskadowy arkusz styli",
    a4: "strukturalny język zapytań do bazy danych",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "DBMS - DataBase Management System, MySQL jest przykładem DBMS",
  },
  {
    question: "Krotka w bazach relacyjnych to",
    url: "",
    a1: "wiersz tabeli",
    a2: "kolumna tabeli",
    a3: "komórka tabeli",
    a4: "cała tabela",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Atrybut w relacyjnych bazach danych to",
    url: "",
    a1: "kolumna tabeli",
    a2: "wiersz tabeli",
    a3: "komórka tabeli",
    a4: "cała tabela",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Kolumna/Kolumny jednoznacznie identyfikujące rekord w tabeli relacyjnej bazy danych to",
    url: "",
    a1: "klucz podstawowy",
    a2: "klucz obcy",
    a3: "klucz naturalny",
    a4: "klucz sztuczny",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Kolumna wykorzystywana do tworzenia relacji w relacyjnych bazach danych to",
    url: "",
    a1: "klucz obcy",
    a2: "klucz podstawowy",
    a3: "klucz naturalny",
    a4: "klucz sztuczny",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Klucz naturalny w bazach relacyjnych to",
    url: "",
    a1: "kolumna, która jest naturalnym atrybutem przechowywanej encji",
    a2: "kolumna, która została dodana by jednoznacznie identyfikować rekord",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Kluczem sztucznym jest np. Id, ponieważ nie ma ono nic wspólnego z encją przechowywaną w tabeli. Kluczem naturanym będzie np. PESEL, ponieważ jest powiązany z przechowywaną encją (np. studentem) i jest unikalną wartością jednoznacznie identyfikującą rekord.",
  },
  {
    question: "Relacja wiele do wielu wymaga",
    url: "",
    a1: "trzeciej tabeli łączącej",
    a2: "dwóch kluczy obcych",
    a3: "dwóch kluczy podstawowych",
    a4: "dwóch kluczy sztucznych",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "O tym, że każda komórka tabeli w bazie relacyjnej musi przchowywać jedną wartość mówi",
    url: "",
    a1: "Pierwsza postać normalna",
    a2: "Druga postać normalna",
    a3: "Trzecia postać normalna",
    a4: "Czwarta postać normalna",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Przykład: Mamy tabele Oceny. Kolumna Ocena przechowuje zawsze jedną ocene, a nie oceny po przecinku. Jeżeli uczeń dostał koleją ocene to pojawia się nowy rekord w tabeli.",
  },
  {
    question:
      "O tym, że każda tabela musi przechowywać dane tylko tej konkretnej encji mówi",
    url: "",
    a1: "Druga postać normalna",
    a2: "Pierwsza postać normalna",
    a3: "Trzecia postać normalna",
    a4: "Czwarta postać normalna",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Jeżeli tabela nazywa się Students to nie przechowuje ich adresów czy ocen.",
  },
  {
    question:
      "O tym, że każda kolumna może być zależna tylko od klucza głównego mówi",
    url: "",
    a1: "Trzecia postać normalna",
    a2: "Pierwsza postać normalna",
    a3: "Druga postać normalna",
    a4: "Czwarta postać normalna",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Przykład z brutto, netto i tara. Nie ma sensu trzymać w bazie wszystkich trzech wartości jak dwie da się wyliczyć na bazie trzeciej. Nie ma sensu trzymać w bazie daty urodzenia jeżeli da się ją wyciągnąć z numeru PESEL.",
  },
  {
    question: "Każda relacja w relacyjnych bazach danych wymaga klucza obcego?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "",
  },
  {
    question: "Procedura i funkcja to to samo?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Procedura nie zwraca wartości.",
  },
  {
    question: "Tak zwane aplikacje CRUDowe to",
    url: "",
    a1: "aplikacje skupiające się na dodawaniu/czytaniu/aktualizowaniu/usuwaniu danych z bazy",
    a2: "aplikacje oparte na REST API",
    a3: "aplikacje typowo frontendowe",
    a4: "aplikacje tworzące strukture bazy danych",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Aplikacje crudowe to aplikacje, które nie wykonują za dużo logiki a jednynie zapisują i odczytują dane z bazy.",
  },
  {
    question: "ENUM oraz SET jako typy kolumn są równoznaczne?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "W przypadku enuma, musimy wybrać jedną konkretną wartość. W przypadku zbioru możemy do pola wstawić kilka opcji zdefiniowanych w zbiorze.",
  },
  {
    question: "Klauzula SQL służąca do modyfikowania struktury tabeli to?",
    url: "",
    a1: "alter",
    a2: "update",
    a3: "modify",
    a4: "change",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Klauzula SQL służąca do usuwania tabel to?",
    url: "",
    a1: "drop",
    a2: "delete",
    a3: "remove",
    a4: "erase",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: 'Klauzula "limit" w SQL przyjmuje do _ parametrów?',
    url: "",
    a1: "2",
    a2: "3",
    a3: "1",
    a4: "4",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Wiele osób nie wie, że limit przyjmuje opcjonalny parametr, którym jest offset w tabeli. "limit 2, 6" oznacza weź 6 elementów, ale zacznij od trzeciego.',
  },
  {
    question: "W SQL sortowanie malejące oznaczamy?",
    url: "",
    a1: "ASC",
    a2: "DESC",
    a3: "UP",
    a4: "DOWN",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  //php
  {
    question: "Rozszerzenie plików PHP to?",
    url: "",
    a1: "*.php",
    a2: "*.p",
    a3: "*.pp",
    a4: "*.html",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: '"index.php" ma większy priorytet niż "index.html"?',
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Pliki php mają większy priorytet.",
  },
  {
    question: "Operatorem konkatenacji w PHP jest?",
    url: "",
    a1: ".",
    a2: "+",
    a3: "^",
    a4: "|",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Może to być niespodzianka, ale łącznie stringów odbywa się za pomocą "."',
  },
  {
    question: "W php definicję funkcji poprzedzamy słowem kluczowym?",
    url: "",
    a1: "function",
    a2: "func",
    a3: "def",
    a4: "proc",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "W php aby zdefiniować tablicę musimy użyc konstrukcji?",
    url: "",
    a1: "$t = array(1,2,3);",
    a2: "$t = {1,2,3};",
    a3: "$t = [1,2,3];",
    a4: "$t = (1,2,3);",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "W php aby pobrać rozmiar tablicy użyjemy funkcji?",
    url: "",
    a1: "count();",
    a2: "size();",
    a3: "length();",
    a4: "len();",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "W php aby otworzyć plik do odczytu należy posłużyć się składnią?",
    url: "",
    a1: 'fopen("time.txt","r");',
    a2: 'open("time.txt","r");',
    a3: 'fopen("time.txt");',
    a4: 'open("time.txt");',
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Błędną nazwą zmiennej w języku PHP jest?",
    url: "",
    a1: "$click-counter",
    a2: "$click_counter",
    a3: "$clickCounter",
    a4: "$clickcounter",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Aby w PHP odnieść się do wartości formularza należy jako indeksu tablicy $_GET/$_POST użyć?",
    url: "",
    a1: "wartości atrybutu name danego inputa",
    a2: "wartości atrybutu class danego inputa",
    a3: "wartości atrybutu id danego inputa",
    a4: "wartości atrybutu index danego inputa",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Pętla foreach w PHP ma następującą składnie:?",
    url: "",
    a1: "foreach ($collection as $item)",
    a2: "foreach ($item as $collection)",
    a3: "foreach ($collection in $item)",
    a4: "foreach ($item in $collection)",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: 'W PHP funkcji "rand()" moża określic przedział losowania?',
    url: "",
    a1: "za pomocą dwóch opcjonalnych parametrów",
    a2: "za pomocą metody modulo-dodawanie znanej z C++",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "",
  },
  //python
  {
    question: "Rozszerzenie plików źródłowych języka Python to?",
    url: "",
    a1: "*.py",
    a2: "*.p",
    a3: "*.pp",
    a4: "*.ph",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Python bazuje na języku?",
    url: "",
    a1: "C",
    a2: "C++",
    a3: "C#",
    a4: "F#",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Najczęściej mamy do czynienia z implementacją CPython.",
  },
  {
    question: "Błędną nazwą zmiennej w języku Python jest?",
    url: "",
    a1: "click-counter",
    a2: "click_counter",
    a3: "_clickCounter",
    a4: "clickCounter",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Czy w języku Python można pisać kod realizujący jakieś zadanie poza funkcją?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Podobnie jak w JavaScript program można pisać odrazu bez funkcji.",
  },
  {
    question: 'Odpowiednikiem słowa kluczowgo "this" w Pythonie jest?',
    url: "",
    a1: "self",
    a2: "me",
    a3: "base",
    a4: "ptr",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Chodzi o słowo kluczowe "self" przekazywane jako argument do każdej metody klasy. W C++ this jest też przekazywane jako pierwszy argument, ale nie widać tego w kodzie.',
  },
  {
    question:
      'W pythonie każda funkcja musi przyjmować jako pierwszy argument "self"?',
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Jest tak tylko i wyłącznie w przypadku metod klasy.",
  },
  {
    question: 'Kolekcja o nazwie "tuple" w Pythonie jest mutowalna?',
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Tuple typu () nie pozwala po zainicjowaniu modyfikować swojej zawartości.",
  },
  {
    question: 'Kolekcja o nazwie "list" w Pythonie jest mutowalna?',
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "List typu [] pozwala po zainicjowaniu modyfikować swoją zawartość.",
  },
  {
    question:
      "W języku Python aby dodać element na koniec listy należy posłużyć się metodą?",
    url: "",
    a1: "append()",
    a2: "add()",
    a3: "push()",
    a4: "insert()",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "W języku Python istnieje różnica między cudzysłowami a apostrofami?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "",
  },
  {
    question: "Konstruktor klasy w języku Python ma nazwę?",
    url: "",
    a1: "__init__",
    a2: "__create__",
    a3: "__self__",
    a4: "taką jak nazwa klasy",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Aby w języku Python wywołać konstruktor klasy bazowej należy użyć konstrukcji?",
    url: "",
    a1: "super().__init__()",
    a2: "base.__init__()",
    a3: "super().create()",
    a4: "base.create()",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "W języku Python aby utworzyć obiekt klasy ABC należy posłużyć się zapisem?",
    url: "",
    a1: "obj = ABC()",
    a2: "obj = new ABC()",
    a3: "obj = ABC",
    a4: "obj = new ABC",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "W języku Python gdy definiowana klasa A dziedziczy z klasy B posługujemy się zapisem",
    url: "",
    a1: "class A(B)",
    a2: "class A: B",
    a3: "class A<B>",
    a4: "class A{B}",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "W języku Python definicję klasy rozpoczynamy od słowa kluczowego",
    url: "",
    a1: "class",
    a2: "def",
    a3: "let",
    a4: "type",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "W języku Python definicję funkcji rozpoczynamy od słowa kluczowego",
    url: "",
    a1: "def",
    a2: "class",
    a3: "let",
    a4: "type",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "W języku Python aby dołączyć inny moduł należy posłużyć się słowem kluczowym",
    url: "",
    a1: "import",
    a2: "include",
    a3: "using",
    a4: "crate",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Pętlą niedostępną w języku Python jest?",
    url: "",
    a1: "for()",
    a2: "for..range()",
    a3: "while()",
    a4: "do while()",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "W języku Python aby parsować string na int trzeba posłużyć się funkcją",
    url: "",
    a1: "int()",
    a2: "parseInt()",
    a3: "Int.Parse()",
    a4: "ParseInt()",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "W języku Python aby parsować string na float trzeba posłużyć się funkcją",
    url: "",
    a1: "float()",
    a2: "parseFloat()",
    a3: "Float.Parse()",
    a4: "ParseFloat()",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "W języku Python instrukcja warunkowa przybiera formę:",
    url: "",
    a1: "if:..elif:..else:",
    a2: "if:..else if:..else:",
    a3: "if:..elseif:..else:",
    a4: "if:..else:..else:",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "W języku Python wyrażenie lambda przyjmuje formę:",
    url: "",
    a1: "func = lambda a, b: a + b",
    a2: "func = (a,b): a + b",
    a3: "func = (a,b) => a + b",
    a4: "func = lamda a, b => a + b",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "W języku Python konstrukcja odpowiedzialna za wycinannie podłańcuchów łańcucha tekstowego to",
    url: "",
    a1: "operator[start:end]",
    a2: "substr(start:end)",
    a3: "operator (start:end)",
    a4: "substring(start:end)",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "W języku Python metoda na stringu pozwalająca usunąć białe znaki na obu końcach łańcucha to",
    url: "",
    a1: "strip()",
    a2: "trim()",
    a3: "cut()",
    a4: "slice()",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Która konstrukcja w języku Python to lista?",
    url: "",
    a1: "[1,2,3,4]",
    a2: "(1,2,3,4)",
    a3: "{1,2,3,4}",
    a4: "żadna z wymienionych",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Która konstrukcja w języku Python to tak zwany tuple?",
    url: "",
    a1: "(1,2,3,4)",
    a2: "[1,2,3,4]",
    a3: "{1,2,3,4}",
    a4: "żadna z wymienionych",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: 'W języku Python kolekcje "set" oraz "list" są takie same?',
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "W zbiorze nie mogą występować duplikaty.",
  },
  {
    question:
      "W języku Python aby wewnątrz funkcji możliwe było zapisanie wartości do globalnej zmiennej należy oznaczyć ją w tejże funkcji słowem kluczowym:",
    url: "",
    a1: "global",
    a2: "static",
    a3: "extern",
    a4: "main",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Jeżeli zapiszemy w funkcji do zmiennej "a", która jest globalna nie oznaczając jej słowem kluczowym "global" język utworzy zmienną lokalną o tej nazwie.',
  },
  {
    question: "Interpolacji stringów w języku python można dokonać składnią?",
    url: "",
    a1: 'f"Ala ma {count} kotów!"',
    a2: '$"Ala ma {count} kotów!"',
    a3: '#"Ala ma {count} kotów!"',
    a4: '&"Ala ma {count} kotów!"',
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Jest to element języka eliminujący formatowanie stringów za pomocą ich konkatenacji ze zmiennymi.",
  },
  {
    question:
      "W języku Python aby otworzyć plik należy posłużyć się konstrukcją",
    url: "",
    a1: 'f = open("plik.txt")',
    a2: 'f = read("plik.txt")',
    a3: 'f = fopen("plik.txt")',
    a4: 'f = with("plik.txt")',
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Menedżerem pakietów dla języka Python jest",
    url: "",
    a1: "pip",
    a2: "cpython",
    a3: "jpython",
    a4: "nuget",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  //windows/linux cmd
  {
    question:
      "Polecenie wiersza poleceń Windows służące do wyświetlania zawartości katalogów to?",
    url: "",
    a1: "dir",
    a2: "cd",
    a3: "ls",
    a4: "pwd",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Polecenie wiersza poleceń Linux służące do wyświetlania zawartości katalogów to?",
    url: "",
    a1: "ls",
    a2: "cd",
    a3: "dir",
    a4: "pwd",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Polecenie wiersza poleceń Windows służące do przełączania katalogów to?",
    url: "",
    a1: "cd",
    a2: "dir",
    a3: "ls",
    a4: "pwd",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Polecenie wiersza poleceń Linux służące do przełączania katalogów to?",
    url: "",
    a1: "cd",
    a2: "ls",
    a3: "dir",
    a4: "pwd",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Polecenie wiersza poleceń Windows służące do tworzenia katalogów to?",
    url: "",
    a1: "mkdir",
    a2: "create",
    a3: "cd",
    a4: "dir",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Polecenie wiersza poleceń Linux służące do tworzenia katalogów to?",
    url: "",
    a1: "mkdir",
    a2: "create",
    a3: "ls",
    a4: "dir",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Polecenie wiersza poleceń Windows służące do cofania się w strukturze katalogów to?",
    url: "",
    a1: "cd ../cd..",
    a2: "cd ./cd .",
    a3: "ls",
    a4: "pwd",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Polecenie wiersza poleceń Linux służące do cofania się w strukturze katalogów to?",
    url: "",
    a1: "cd ..",
    a2: "cd..",
    a3: "cd.",
    a4: "bd",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Spacja po cd jest istotna :)",
  },
  {
    question:
      "Polecenie wiersza poleceń Windows służące do wyświetlenia aktualnej ścieżki to?",
    url: "",
    a1: "cd",
    a2: "chdsk",
    a3: "ls",
    a4: "pwd",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Polecenie wiersza poleceń Linux służące do wyświetlenia aktualnej ścieżki to?",
    url: "",
    a1: "pwd",
    a2: "cd",
    a3: "chmod",
    a4: "ls",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Polecenie wiersza poleceń Windows służące do czyszczenia okna konsoli to?",
    url: "",
    a1: "cls",
    a2: "clear",
    a3: "c",
    a4: "clearis",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Polecenie wiersza poleceń Linux służące do czyszczenia okna konsoli to?",
    url: "",
    a1: "clear",
    a2: "cls",
    a3: "c",
    a4: "clearis",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Polecenie wiersza poleceń Windows służące do sprawdzenia adresacji IP to?",
    url: "",
    a1: "ipconfig",
    a2: "ifconfig",
    a3: "iconfig",
    a4: "netstat",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Polecenie wiersza poleceń Linux służące do sprawdzenia adresacji IP to?",
    url: "",
    a1: "ifconfig",
    a2: "ipconfig",
    a3: "iconfig",
    a4: "netstat",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Polecenie systemu linux pozwalające usunąć plik lub katalog to?",
    url: "",
    a1: "rm",
    a2: "remove",
    a3: "rd",
    a4: "del",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Polecenie systemu linux pozwalające zmienić nazwę pliku to?",
    url: "",
    a1: "mv",
    a2: "rm",
    a3: "chn",
    a4: "rename",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Jak zmienić nazwę pliku? Przenieść go w to samo miejsce pod inną nazwą.",
  },
  {
    question: "Polecenie systemu linux pozwalające przenieść plik to?",
    url: "",
    a1: "mv",
    a2: "rm",
    a3: "cp",
    a4: "ls",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Polecenie systemu windows pozwalające przenieść plik to?",
    url: "",
    a1: "move",
    a2: "mv",
    a3: "cp",
    a4: "dir",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Polecenie systemu linux pozwalające skopiować plik to?",
    url: "",
    a1: "cp",
    a2: "rm",
    a3: "mv",
    a4: "ls",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Polecenie systemu windows pozwalające skopiować plik to?",
    url: "",
    a1: "copy",
    a2: "rm",
    a3: "cp",
    a4: "ls",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  //pytania ogólne
  {
    question: "Jak przekazać callback do funkcji w C#?",
    url: "",
    a1: "trzeba posłuzyć się odpowiednim delegatem",
    a2: "trzeba posłuzyć się odpowiednim wskaźnikiem",
    a3: 'trzeba posłużyć się "boxingiem"',
    a4: "jest to nie możliwe",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Np do metody FirstOrDefault() w Linq podajemy lambde, która jest predykatem (Predicate). ",
  },
  {
    question: "Jak przekazać callback do funkcji w C/C++?",
    url: "",
    a1: "trzeba posłużyć się odpowiednim wskaźnikiem",
    a2: "trzeba posłużyć się odpowiednim delegatem",
    a3: "trzeba posłużyć się odpowiednią referencja",
    a4: "to nie możliwe",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Lambda jest dobrym narzędziem do tworzenia krótkich callbacków?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "",
  },
  {
    question: 'Znak "\\n" oznacza?',
    url: "",
    a1: "znak nowej linii",
    a2: "znak powrotu kursora",
    a3: "znak tabulacji",
    a4: "znak ucieczki",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "W teorii znak ten przenosi kursor w pionie linie niżej, ale nie cofa do początku wiersza. W praktyce zostało to uproszczone i znak ten wykonuje obie operacje.",
  },
  {
    question: 'Znak "\\r" oznacza?',
    url: "",
    a1: "znak powrotu kursora",
    a2: "znak nowej linii",
    a3: "znak tabulacji",
    a4: "znak ucieczki",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Znak ten przenosi kursor do początku wiersza.",
  },
  {
    question:
      "System kodowania znaków, który przypisuje liczbą od 0 do 127 znaki to?",
    url: "",
    a1: "ASCII",
    a2: "UTF",
    a3: "ISO",
    a4: "PID",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Najbardziej podstawowy rodzaj kodowania znaków to ASCII. UTF to ogromne rozszerzenie zawierające znaki specjalne każdego języka oraz wiele innych symboli.",
  },
  {
    question:
      "Które z poniższych wymagań projektu to wymaganie niefunkcjonalne?",
    url: "",
    a1: "bezpieczeństwo",
    a2: "obsługa baz SQL",
    a3: "obsługa REST API",
    a4: "szyfrowanie haseł metodą SHA256",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Wymagania niefunkcjonalne to np. bezpieczeństwo, schludny design, dostępność na wielu platformach.",
  },
  {
    question: "Powinno się unikać częstego komunikowania się z bazą danych?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Nie odpytujemy bazy danych w pętli. Lepiej zrobić to raz a dobrze. Unikniemy w ten sposób problemów z wydajnością i przeciążania łącza/bazy danych.",
  },
  {
    question:
      "Powinno się unikać częstego komunikowania się z zewnętrznym API?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Nie odpytujemy API w pętli. Lepiej zrobić to raz a dobrze. Unikniemy w ten sposób problemów z wydajnością i przeciążania łącza lub serwera z API",
  },
  {
    question:
      "Biblioteka ORM czyli Object Relational Mapping jest wydajniejsza niż czyste zapytanie SQL?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "ORM wiele rzeczy ułatwia i automatyzuje, ale nigdy nie wiem jakie zapytanie wysłał pod spodem do bazy danych.",
  },
  {
    question: "Powinno się unikać korzystania ze wskaźników?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Wskaźniki są głównym źródłem błędów i luk w oprogramowaniu. Nowoczesne języki takie jak RUST podchodzą do tematu pamięci bardzo rygorystycznie i ograniczają możliwości wskaźników do potrzebnego minimum.",
  },
  {
    question:
      "Powinno się przekazywać parametry funkcji przez referencje jeżeli nie potrzebujemy kopii wartości?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Jeżeli przekazujemy coś do funkcji a nie potrzebujemy by ta wykonała swoją kopię tej wartości to przekazujmy parametry przez referencję. Unikniemy wtedy zbędnych kopii w pamięci.",
  },
  {
    question: "Jednostka wykonująca kod to?",
    url: "",
    a1: "wątek",
    a2: "proces",
    a3: "task",
    a4: "konsola",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Wątek jest jednostką wykonującą kod. Każdy program dostaje minimum jeden wątek. Każdy wątek ma swój context czyli stan procesora. Zamiana wątku na inny podmienia context na procesorze.",
  },
  {
    question:
      "Które z poniższych stwierdzeń o procesie i wątku jest prawdziwe?",
    url: "",
    a1: "Proces to zbiór zwierający miminum jeden wątek",
    a2: "Watek to zbiór zawierający minimum jeden proces",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Proces jest uruchamiany przez system z jednym wątkiem. Programista może uruchomić więcej wątków i robić z nimi co chce.",
  },
  {
    question:
      "Programista może programowo otworzyć wiele wątków w trakcie trawania programu?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "",
  },
  {
    question: "Każdy program ma minimum jeden wątek?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "",
  },
  {
    question: "Tylko wątek główny programu może dotykać elementów UI?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Bardzo dobrze widać to w C#. Dotykanie UI w metodzie asynchronicznej zwracającej Task kończy się rzuceniem wyjątku.",
  },
  {
    question:
      "Jeżeli wątek główny zakończy się (return w main zostanie osiągnięty) to program czeka na pozostałe wątki?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Jeżeli wyjdziemy z funkcji main (program się zakończy) to każdy wątek jest zabijany.",
  },
  {
    question:
      "Od programisty zależy czy wątek główny poczeka na zakończenie wątków dodatkowych?",
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Wątek główny powinien czekać na zakończenie wątków pobocznych lub sam zlecić ich zabicie.",
  },
  {
    question: "Zrównoleglenie polega na?",
    url: "",
    a1: "podzieleniu zadania na części i wykonaniu każdej z nich na innym wątku",
    a2: "podzieleniu zadania na części i wykonaniu każdej z nich w innym procesie",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "",
  },
  {
    question: "Wymiana danych między watkami przebiega swobodnie?",
    url: "",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Wątki wykonują zadania. Nie możemy odpytywać wątku o dane lub coś innego w dowolnym momencie. W najlepszym przypadku dostaniemy zły wynik, albo wynik nie pełny.",
  },
  {
    question: "Biblioteką języka C++ do tworzenia wątków jest?",
    url: "",
    a1: "std::thread",
    a2: "Thread",
    a3: "Task",
    a4: "threading",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "std::thread to banalna w użyciu biblioteka obiektowa do tworzenia wątków.",
  },
  {
    question: "Biblioteką języka C# do tworzenia wątków jest?",
    url: "",
    a1: "Task",
    a2: "std::thread",
    a3: "Promise",
    a4: "threading",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Task<T> to typ, służący do tworzenia wątków w C#.",
  },
  {
    question: "Rejestr procesora to?",
    url: "",
    a1: "komórka pamięci w procesorze",
    a2: "cache procesora",
    a3: "instrukcja procesora",
    a4: "rdzeń procesora",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Rejestr to mała komórka pamięci w procesorze o rozmiarze np jednego inta. Jest to najszybsza pamięć w komputerze.",
  },
  {
    question: "Część procesora nazywana ALU to?",
    url: "",
    a1: "jednostka arytmetyczno logiczna",
    a2: "jednostka sterująca",
    a3: "kontroler pamięci",
    a4: "kooprocesor",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "ALU - Arithmetic Logic Unit",
  },
  {
    question: "Część procesora nazywana CU to?",
    url: "",
    a1: "jednostka sterująca",
    a2: "jednostka arytmetyczno logiczna",
    a3: "kontroler pamięci",
    a4: "kooprocesor",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "CU - Control Unit",
  },
  {
    question: "Część procesora nazywana FPU to?",
    url: "",
    a1: "kooprocesor",
    a2: "jednostka sterująca",
    a3: "jednostka arytmetyczno logiczna",
    a4: "kontroler pamięci",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Jest to kooprocesor. FPU - Floating Point Unit.",
  },
  {
    question:
      "Część procesora odpowiedzialna za operacje zmiennoprzecinkowe to?",
    url: "",
    a1: "kooprocesor",
    a2: "jednostka licząca",
    a3: "jednostka arytmetyczno logiczna",
    a4: "mostek północny",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Dawniej kooprocesor był osobnym układem. Dziś jest częścią procesora. Ma on swój zestaw instrukcji.",
  },
  //bhp
  {
    question:
      "Natężenie dźwięku na stanowisku pracy w biurze nie może przekraczać?",
    url: "",
    a1: "45 dB",
    a2: "55 dB",
    a3: "50 dB",
    a4: "40 dB",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Natężenie dźwięku na stanowisku pracy nie może przekraczać?",
    url: "",
    a1: "75 dB",
    a2: "55 dB",
    a3: "60 dB",
    a4: "65 dB",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Natężenie światła na stanowisku pracy powinno oscylować koło?",
    url: "",
    a1: "500 lx",
    a2: "400 lx",
    a3: "600 lx",
    a4: "700 lx",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      "Temperatura powietrza przy stanowisku pracy nie powinna być niższa niż?",
    url: "",
    a1: "18 stopni C",
    a2: "17 stopni C",
    a3: "19 stopni C",
    a4: "16 stopni C",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Kategorią zagrożeń na stanowisku pracy nie są?",
    url: "",
    a1: "zagrożenia biologiczne",
    a2: "zagrożenia chemiczne",
    a3: "zagrożenia psychofizyczne",
    a4: "zagrożenia fizyczne",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Kategorie: fizyczne, chemiczne, psychofizyczne.",
  },
  {
    question:
      "Zagrożeniem w środowiku pracy przypadającym do kategori zagrożeń chemicznych jest?",
    url: "",
    a1: "alergia",
    a2: "niedostateczne oświetlenie",
    a3: "oparzenie",
    a4: "porażenie prądem",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Do zagrożeń chemicznych należy np. alergia na środki czystości",
  },
  {
    question:
      "Zagrożeniem w środowiku pracy przypadającym do kategori zagrożeń psychofizycznych jest?",
    url: "",
    a1: "stres",
    a2: "hałas",
    a3: "szkodliwe działanie monitorów",
    a4: "porażenie prądem",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "W tej kategori mamy do czynienia głównie ze stresem i przemęczeniem.",
  },
  {
    question:
      "Zagrożeniem w środowiku pracy przypadającym do kategori zagrożeń fizycznych jest",
    url: "",
    a1: "wszystkie pozostałe",
    a2: "hałas",
    a3: "pożar",
    a4: "upadek",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "W tej kategori mamy do czynienia jeszcze z porażeniem prądem, niedostatecznym oświetleniem, szkodliwym działaniem monitorów oraz skaleczeniem.",
  },
  {
    question: "Odległość twarzy od monitora powinna wynosić minimum?",
    url: "",
    a1: "40cm",
    a2: "50cm",
    a3: "60cm",
    a4: "70cm",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Minimalna odległośc klawiatury od krawędzi blatu to?",
    url: "",
    a1: "10cm",
    a2: "15cm",
    a3: "5cm",
    a4: "20cm",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Stół powinien spełniać warunek?",
    url: "",
    a1: "wszystkie wymienione",
    a2: "wysokość stołu powinna pozwalać na swobodną pozycję z zachowaniem kąta prostego między ramieniem i przedramieniem",
    a3: "kolana i uda siedzącego nie powinny dotykać blatu",
    a4: "powierzchnia blatu powinna być jasna i matowa",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Fotel powinien spełniać warunek?",
    url: "",
    a1: "wszystkie wymienione",
    a2: "powinien być stabilny z możliwością obrotu o 350 stopni",
    a3: "powinien pozwalać na swobodne poruszanie się",
    a4: "powinien posiadać podłokietniki",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Poza tym powienien mieć regulowaną wysokość i wyprofilowane oparcie.",
  },
  {
    question:
      "Prawidłową i ergonomiczną pozycję pracy przy komputerze zapewni krzesło, którego",
    url: "",
    a1: "oparcie zapewnia lordozę w odcinku lędźwiowym",
    a2: "oparcie w odcinku szyi jest pochylone do przodu o 40stopni",
    a3: "podłokietniki są 30 cm wyżej niż blat",
    a4: "podłokietniki są 20 cm niżej niż blat",
    tag: "OFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Informatykowi na stanowisku pracy nie wolno?",
    url: "",
    a1: "wszystkie wymienione",
    a2: "spożywać posiłków",
    a3: "palić tytoniu",
    a4: "zastawiać otworów wentylacyjnych",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Do środków ochrony zbiorowej zaliczamy?",
    url: "",
    a1: "wszystkie wymienione",
    a2: "oświetlenie",
    a3: "wentylację i klimatyzację",
    a4: "oddymianie i instalację odgromową",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Do środków ochrony indywidualnej zaliczamy?",
    url: "",
    a1: "środki ochrony głowy",
    a2: "wszelkiego rodzaju klimatyzacje",
    a3: "oddymianie",
    a4: "wentylacje",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Do środków ochrony indywidualnej zaliczamy?",
    url: "",
    a1: "wszystkie wymienione",
    a2: "środki ochrony głowy",
    a3: "środki ochrony kończyn",
    a4: "środki ochrony słuchu",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Poza tym: środki ochrony twarzy i oczy oraz środki ochrony układu oddechowego.",
  },
  {
    question: "Zabezpieczenie różnicowoprądowe chronii?",
    url: "",
    a1: "przed porażeniem prądem wykrywając różnice prądu wpływającego do obwodu i tego w nim płynącego",
    a2: "przed nadmiernym wzrostem przepływającego w obwodzie prądu",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Zabezpieczenie nadprądowe mówi się, że chroni sprzęt, a róznicówka chroni użytkownika.",
  },
  //szyfry i kodowania
  {
    question: 'Wartość zakodowaną za pomocą "base64" da się odkodować?',
    url: "",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "",
  },
  {
    question: "Które zdanie o funkcji skrótu jest nieprawdziwe?",
    url: "",
    a1: '"hash" uzyskany z funkcji skrótu jest odwracalny',
    a2: '"hash" uzyskany z funkcji skrótu jest nieodwracalny',
    a3: 'wynik funkcji skrótu to takzwany "hash"',
    a4: "funkcja skrótu przypisuje dowolnie dużej wartości krótką wartość o stałym rozmiarze",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Funkcją skrótu nie jest?",
    url: "",
    a1: "base64",
    a2: "adler32",
    a3: "md5",
    a4: "sha-x",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Suma kontrolna to?",
    url: "",
    a1: "wartość obliczana na bazie danych, służąca do oceny czy dane te nie zostały uszkodzone lub zmodyfikowane",
    a2: "zwykła funkcja skrótu",
    a3: 'synonim do słowa "hash"',
    a4: "algorytm szyfrujący",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Suma kontrolna to specjalna wartość liczona z pewnej porcji danych. Służy do weryfikacji ich poprawności. Jeżeli transmitujemy coś np. przez bluetooth oprócz danych wysyłamy też do drugiego urządzenia sumę kontrolną tych danych. Drugie urządzenie liczy swoją sumę i porównuje ją z tą otrzymaną dzięki czemu wie czy dane zostały uszkodzone w drodze.",
  },
  {
    question: "Szyfr różni się od funkcji skrótu tym, iż?",
    url: "",
    a1: "da się go odwrócić",
    a2: "nie da się go odwrócić",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Szyfr da się odwrócić. Szyfrogram to zaszyfrowana wiadomość.",
  },
  {
    question: "Podpis cyfrowy to?",
    url: "",
    a1: "sposób potwierdzania autentyczności danych",
    a2: "kolejna metodologia szyforwania danych",
    a3: "forma sumy konstrolnej",
    a4: "specjalny certyfikat przyznany konkretnym danym",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Podpis cyfrowy bazuje na szyfrowaniu asymetrycznym. Autor danych szyfruje dane swoim własnym kluczem prywatnym, który jest tajny. Odbioraca szyfruje dokument kluczem publicznym i porównuje zaszyfrowane dane.",
  },
  //pytania do kody na obrazku
  {
    question: "Kod C++ na obrazku wyświetli na ekranie napis?",
    url: "/images/noseed.png",
    a1: "Hello World",
    a2: "Goodby World",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: 'Aby losowanie zwracało różne wyniki należy je poprawnie zainicjować za pomocą "srand(time(NULL));"',
  },
  {
    question:
      'Program na obrazku wywołany poleceniem "program.exe ASD QWE" wyświetli na ekranie napis?',
    url: "/images/mainargs.png",
    a1: "ASD",
    a2: "QWE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: 'Pod indeksem 0 tablicy argv znajduje się nazwa pliku wykonywalnego czyli "program.exe".',
  },
  {
    question:
      'Gdy wywołamy program na obrazku poleceniem "program.exe ASD QWE" zmienna argc będzie miała wartość?',
    url: "/images/mainargs.png",
    a1: "3",
    a2: "2",
    a3: "1",
    a4: "0",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Pod indeksem 0 tablicy argv znajduje się nazwa pliku wykonywalnego czyli "program.exe".',
  },
  {
    question: "IDE w poniższym fragmencie programu pokazuje błąd, ponieważ",
    url: "/images/staticarrayvar.png",
    a1: "size nie jest stałą",
    a2: "nie da się zaalokować tak dużej tablicy",
    a3: "size musi być zmienną bez znaku",
    a4: "składnia definicji tablicy jest błędna",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Rozmiar podany podczas inicjalizacji tablicy statycznej musi być stałą.",
  },
  {
    question: "Na poniższym obrazku widzimy",
    url: "/images/alloc2darray.png",
    a1: 'proces alokowania tablicy 2D gdzie oba wymiary równe są "size"',
    a2: 'proces alokowania tablicy gdzie wymiar to "size"',
    a3: "proces alokowania tablicy 2D gdzie każda podtablica ma inny wymiar",
    a4: "proces zwalniania pamięci, która była przeznaczona na tablicę 2D",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Alokujemy tutaj tablicę 2D, która w obu wymiarach ma ten sam rozmiar.",
  },
  {
    question: "Co wyświetli się na ekranie?",
    url: "/images/ucharcircle1.png",
    a1: "0",
    a2: "256",
    a3: "-128",
    a4: "program zakończy się błędem",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Przekraczamy zakres unsigned chara, więc następuje powrót na początek zakresu.",
  },
  {
    question: "Co wyświetli się na ekranie?",
    url: "/images/ucharcircle2.png",
    a1: "255",
    a2: "-1",
    a3: "0",
    a4: "program zakończy się błędem",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Przekraczamy zakres unsigned chara, więc następuje powrót na koniec zakresu.",
  },
  {
    question: 'Ile razy zobaczymy napis "Hello world!" na ekranie?',
    url: "/images/infinitewhile.png",
    a1: "nieskończenie wiele, ponieważ pętla jest nieskończona",
    a2: "2",
    a3: "1",
    a4: "ani razu",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Każda wartośc inna niż 0 lub false jest równoznaczna prawdzie w C/C++.",
  },
  {
    question: 'Ile razy zobaczymy napis "Hello world!" na ekranie?',
    url: "/images/nowhile.png",
    a1: "ani razu",
    a2: "nieskończenie wiele, ponieważ pętla jest nieskończona",
    a3: "2",
    a4: "1",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Każda wartośc inna niż 0 lub false jest równoznaczna prawdzie w C/C++.",
  },
  {
    question: "Co zobaczymy na ekranie po wykonaniu poniższego programu?",
    url: "/images/printcharfromint.png",
    a1: "B",
    a2: "66",
    a3: "A",
    a4: "wystąpi błąd programu",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Zgodnie z tablicą ASCII pod liczbę 66 podmapowany jest znak 'B'. Specyfikator \"%c\" nakazuje interpretacje liczby jako znak.",
  },
  {
    question: 'Ile razy zobaczymy napis "LOOP" na ekranie?',
    url: "/images/infinitedowhile.png",
    a1: "żadna z pozostałych opcji nie jest poprawna",
    a2: "0",
    a3: "1",
    a4: "2",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "W momencie sprawdzenia warunku licznik będzie miał wartość -1. Następnie -2, -3 itd. Tylko 0 to logiczny fałsz.",
  },
  {
    question: 'Ile razy zobaczymy napis "LOOP" na ekranie?',
    url: "/images/dowhile.png",
    a1: "1",
    a2: "0",
    a3: "3",
    a4: "2",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "W momencie sprawdzenia warunku licznik będzie miał wartość 0 co daje fałsz, ale pętla do while najpierw wykonuje iteracje a później sprawdza warunek. Pętla do while zawsze wykona się minimum raz.",
  },
  {
    question: 'Ile razy zobaczymy napis "LOOP" na ekranie?',
    url: "/images/while.png",
    a1: "0",
    a2: "1",
    a3: "3",
    a4: "2",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "W momencie sprawdzenia warunku licznik będzie miał wartość 0 co daje fałsz.",
  },
  {
    question: "W poniższym kodzie błąd powoduje?",
    url: "/images/dereferencevoidptr.png",
    a1: "próba wyłuskania wskaźnika typu void*",
    a2: "próba wyłuskania do innego typu zmiennej",
    a3: "niepoprawna kombinacja operator-operand",
    a4: "to, że wskaźnik może być wartością NULL",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: '"void" to typ nie określony. Wskaźnik tego typu służy tylko do przechowywania adresu. Chcąc go wyłuskać należy wykonać castowanie na inny typ. W tym przypadku będzie to "int*".',
  },
  {
    question:
      "Poniższa konstrukcja pozwala warunkowo włączyć lub wyłączyć część kodu?",
    url: "/images/ifdef.png",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: 'Zadziała tu zasada znana z normalnych instrukcji warunkowych. W tym przypadku użyliśmy makra kompilatora. Jeżeli będzie ono zdefiniowane dołączony zostanie "iostream", jeżeli nie "cstdio".',
  },
  {
    question: "Poniższy fragment kodu pokazuje",
    url: "/images/ifdebug.png",
    a1: "wszyskie pozostałe",
    a2: "jak pozbyć szybko pozbyć się z kodu wynikowego elementów potrzebnych tylko w trakcie dewelopmentu",
    a3: "jak usunąć część kodu zmieniając jedno makro",
    a4: "jak podmienić/dodać fragment kodu pod pewnym warunkiem",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Zadziała tu zasada znana z normalnych instrukcji warunkowych. W tym przypadku użyliśmy makra kompilatora. Jeżeli będzie ono zdefiniowane dołączony zostanie "iostream", jeżeli nie "cstdio".',
  },
  {
    question: "Jaką wartość zobaczymy na ekranie?",
    url: "/images/macro.png",
    a1: "5",
    a2: "6",
    a3: "4",
    a4: "7",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Macro TO NIE FUNKCJA! Marco SUM(1,2) zostanie przed kompilacją podmienione na 1 + 2 co w konsekwencji da 1 + 2 * 2.",
  },
  {
    question: "Jaką wartość zobaczymy na ekranie?",
    url: "/images/passtofunc.png",
    a1: "1 2 2",
    a2: "1 1 1",
    a3: "1 2 1",
    a4: "1 1 2",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Przekazywanie parametru do funkcji przez wartość, referencje i wskaźnik. Sposób na zwracanie wartości z funkcji bez słowa kluczowego "return".',
  },
  {
    question: "Jaką wartość zobaczymy na ekranie?",
    url: "/images/lambda.png",
    a1: "10 20 99",
    a2: "0 0 99",
    a3: "0 10 20",
    a4: "program zakończy się błędem",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Nawias kwadratowy w lambdach języka C++ służy do przechwytywania zmiennych z otaczającego lambdę zakresu.",
  },
  {
    question: "Jaką wartość zobaczymy na ekranie?",
    url: "/images/policpp.png",
    a1: "BAZOWA/ChildA/ChildB/ChildA/ChildB",
    a2: "BAZOWA/ChildA/ChildB/BAZOWA/BAZOWA",
    a3: "BAZOWA/ChildA/ChildB/ChildA/BAZOWA",
    a4: "BAZOWA/ChildA/ChildB/BAZOWA/ChildB",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Mamy tu do czynnienia z polimorfizmem w C++. Słowo kluczowe "virtual" mówi programowi, że ma wybrać metodę do wykonania na bazie typu po prawej stronie operatora "new".',
  },
  {
    question: "Jaką wartość zobaczymy na ekranie?",
    url: "/images/policpp2.png",
    a1: "ChildA/ChildB/ChildA",
    a2: "BAZOWA/BAZOWA/BAZOWA",
    a3: "BAZOWA/ChildA/BAZOWA",
    a4: "BAZOWA/ChildA/ChildB",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Mamy tu do czynnienia z polimorfizmem w C++. Słowo kluczowe "virtual" mówi programowi, że ma wybrać metodę do wykonania na bazie typu po prawej stronie operatora "new".',
  },
  {
    question: "Na obrazku dostrzec można?",
    url: "/images/kompozycja.png",
    a1: "wzorzec kompozyt",
    a2: "wzorzec fasada",
    a3: "wzorzec budowniczy",
    a4: "wzorzec singleton",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Klasa Point jest zależnością klasy MyApp. Jej obiekt jest wkomponowany w pole klasy MyApp.",
  },
  {
    question: "Na obrazku dostrzec można zastosowanie zasady?",
    url: "/images/kompozycja.png",
    a1: "dependency injection",
    a2: "dependency inversion",
    a3: "polimorfizm",
    a4: "dekorację",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Klasa Point jest zależnością klasy MyApp. Jej obiekt jest wkomponowany w pole klasy MyApp za pomocą dependency injection.",
  },
  {
    question: "Na obrazku dostrzec można?",
    url: "/images/singleton.png",
    a1: "wzorzec singleton",
    a2: "wzorzec kompozyt",
    a3: "wzorzec prototyp",
    a4: "wzorzec most",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Na obrazku widać klasyczne podejście do budowy wzorca singleton. Elementy charakterystyczne to prywatny konstruktor oraz statyczne pole na samego siebie.",
  },
  {
    question: 'Środowisko podkreśla "Add" na poniższym obrazku, ponieważ?',
    url: "/images/delegatereturnaction.png",
    a1: "delegat typu Action służy do przechowywania metod, które zwracają void",
    a2: "delegat typu Action służy do przechowywania metod, które zwracają bool",
    a3: "nie podano typu zwracanego w parametrze generycznym typu Action",
    a4: "żadne z pozostałych",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Do delegatu typu "Action" możemy przypisywać tylko metody, które zwracają void (nic nie zwracają). Wszyskie parametry generyczne dotyczą parametrów funkcji.',
  },
  {
    question:
      "Środowisko podkreśla fragment kodu na poniższym obrazku, ponieważ?",
    url: "/images/delegatepredicateint.png",
    a1: "delegat typu Predicate służy do przechowywania metod, które zwracają bool",
    a2: "delegat typu Predicate służy do przechowywania metod, które zwracają void",
    a3: "nie podano typu zwracanego w parametrze generycznym typu Predicate",
    a4: "żadne z pozostałych",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Do delegatu typu "Predicate" możemy przypisywać tylko metody, które zwracają bool. Wszyskie parametry generyczne dotyczą parametrów funkcji.',
  },
  {
    question: 'Środowisko podkreśla "Add" na poniższym obrazku, ponieważ?',
    url: "/images/delegatefuncnotenoughparams.png",
    a1: "nie podano typu zwracanego w parametrze generycznym typu Func",
    a2: "delegat typu Func służy do przechowywania metod, które zwracają bool",
    a3: "delegat typu Func służy do przechowywania metod, które zwracają void",
    a4: "żadne z pozostałych",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Do delegatu typu "Func" możemy przypisywać tylko metody, które zwracają cokolwiek. Ostatni parametr generyczny odnosi się do typu zwracanego przypisywanej metody.',
  },
  {
    question:
      'Podpowiedź środowiska mówi nam, że typ "Task" w konstruktorze przyjmuje?',
    url: "/images/taskparam.png",
    a1: "funkcję do wykonania, która nic nie zwraca i nie przyjmuje żadnych argumentów",
    a2: "funkcję do wykonania, która nic nie zwraca i przyjmuje dowolną ilość parametrów",
    a3: "funkcję do wykonania, która wraca bool i przyjmuje dowolną ilość parametrów",
    a4: "funkcję do wykonania, która wraca bool i nie przyjmuje żadnych argumentów",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      'Podpowiedź środowiska mówi nam, że metoda "FirstOrDefault" przyjmuje?',
    url: "/images/firstordefaultparam.png",
    a1: "funkcję do wykonania, która zwraca bool i przyjmuje jednego inta",
    a2: "funkcję do wykonania, która wraca inta, i przyjmuje jednego boola",
    a3: "funkcję do wykonania, która nic nie zwraca i przyjmuje inta oraz boola",
    a4: "żadne z pozostałych",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Funkcja ta przyjmuje w parametrze funkcję zwracającą bool, która przyjmuje inta (inta, ponieważ jest to lista intów). Cała metoda FirstOrDefault zwróci pierwszy int z listy, który z callbacka da prawdę.",
  },
  {
    question: "Co wyświetli się na ekranie?",
    url: "/images/reflist.png",
    a1: "4",
    a2: "2",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Lista w C# to typ referencyjny. Więc instancja listy została przekazana do funkcji przez referencje.",
  },
  {
    question: "Co wyświetli się na ekranie?",
    url: "/images/passbyvalue.png",
    a1: "2",
    a2: "4",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Typ int jest typem wartościowym. W momecie przekazania do funkcji tworzy ona sobie jego kopię.",
  },
  {
    question: "Co wyświetli się na ekranie?",
    url: "/images/arraynocopy.png",
    a1: "7",
    a2: "1",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: 'Tablica jest typem referencyjnym. Do "tablica2" przypisaliśmy kopię referencji(wskaźnika) a nie kopię zawartości. Mamy więc dwie zmienne z tym samym adresem.',
  },
  {
    question: "Co wyświetli się na ekranie?",
    url: "/images/linq1.png",
    a1: "4",
    a2: "3",
    a3: "5",
    a4: "0",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Metoda FirstOrDefault() biblioteki LINQ zwraca pierwszy element kolekcji, który z podanego callbacka zwraca prawdę. Jeżeli kolekcja jest pusta lub żadane element nie spełnia wymogów zwracana jest domyślna wartość danego typu.",
  },
  {
    question: "Co wyświetli się na ekranie?",
    url: "/images/linq2.png",
    a1: "0",
    a2: "1",
    a3: "2",
    a4: "wystąpi błąd",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Metoda FirstOrDefault() biblioteki LINQ zwraca pierwszy element kolekcji, który z podanego callbacka zwraca prawdę. Jeżeli kolekcja jest pusta lub żadane element nie spełnia wymogów zwracana jest domyślna wartość danego typu.",
  },
  {
    question: "Co wyświetli się na ekranie?",
    url: "/images/linq3.png",
    a1: "wystąpi błąd",
    a2: "0",
    a3: "1",
    a4: "2",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Metoda First() biblioteki LINQ zwraca pierwszy element kolekcji, który z podanego callbacka zwraca prawdę. Jeżeli kolekcja jest pusta lub żadane element nie spełnia rzucany jest wyjątek.",
  },
  {
    question:
      'Czy w wyniku działania poniższego kodu rzucony zostanie wyjątek "NullReferenceException"?',
    url: "/images/linq4.png",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: 'Zmienna result otrzyma wartość "null". Próba wywołania właściwości "Name" skończy się podanym wyjątkiem.',
  },
  {
    question: "Co wyświetli się na ekranie?",
    url: "/images/linq5.png",
    a1: "2",
    a2: "0",
    a3: "1",
    a4: "3",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Metoda Where() w przeciwieństwie do obu metod First() nie kończy się po znalezieniu pierwszego dopasowania. Zwraca ona IEnumerable<T> dlatego też należy użyć na wyniku ToList() aby pszypisać wynik do zmiennej typu Listy.",
  },
  {
    question: "Poniższa konstrukcja wypisze wszystkie elementy kolekcji?",
    url: "/images/linq6.png",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "",
  },
  {
    question:
      "Poniższa konstrukcja pozwala sprawdzić czy element znajuje się w kolekcji?",
    url: "/images/linq7.png",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "",
  },
  {
    question: "W niniejszej konstrukji zastosowano sortowanie?",
    url: "/images/linq.png",
    a1: "rosnąco",
    a2: "malejąco",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "Do sortowania malejąco służy OrderByDescending()",
  },
  {
    question: "W obu klasach na rysunku zastosowano?",
    url: "/images/props.png",
    a1: "hermetyzację",
    a2: "polimorfizm",
    a3: "właściwości",
    a4: "dziedziczenie",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Klasa po prawej wykorzystuje do hermetyzacji właściwości, które są jak na ten moment unikalne dla C#. Oczywiście w klarmach od get i set można dorzucić więcej logiki niż tylko przypisanie.",
  },
  {
    question: "Co wyświetli się na ekranie?",
    url: "/images/exceptions1.png",
    a1: "DivideByZeroException: Dzielisz przez zero! (3)",
    a2: "Exception: Dzielisz przez zero! (2)",
    a3: "0",
    a4: "program się nie skompiluje",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "W tym przypadku zostanie złapany bardziej precyzyjny wyjątek, ponieważ został wskazany wcześniej.",
  },
  {
    question: "Dlaczego IDE podkreśla nazwę wyjatku?",
    url: "/images/exceptions2.png",
    a1: 'Ponieważ wcześniejsza konstrukcja z "Exception" łapie już wszystko',
    a2: "Nazwa wyjątku jest błędna",
    a3: 'Nie można używać wielu konstrukcji "catch" z jednym "try"',
    a4: "Wyjątek został źle zdefiniowany",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Łapanie "Exception" łapie wszystkie wyjątki z niego dziedziczące, a jak wiadomo w C# każdy wyjątek dziedziczy z "Exception".',
  },
  {
    question: "Dlaczego IDE podkreśla nazwę interfejsu?",
    url: "/images/interface.png",
    a1: "Ponieważ klasa dziedzicząca z intefejsu nie implementuje wszystkich jego składowych",
    a2: "Ponieważ metody wskazywane przez interfejs są prywatne",
    a3: "Ponieważ puste ciało metody nie jest uznawane za implementację",
    a4: "Żadne z pozostałych",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Wszystkie metody wymienione w interfejsie muszą zostać zaimplementowane choćby pustym ciałem.",
  },
  {
    question: "Dlaczego IDE podkreśla nazwę klasy?",
    url: "/images/abstract.png",
    a1: "Ponieważ klasa dziedzicząca z klasy abstrakcyjnej nie implementuje wszystkich jego składowych",
    a2: "Ponieważ metody wskazywane przez klase abstrakcyjną nie są virtualne",
    a3: "Ponieważ puste ciało metody nie jest uznawane za implementację",
    a4: "Żadne z pozostałych",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Wszystkie metody wymienione w klasie abstrakcyjnej muszą zostać zaimplementowane choćby pustym ciałem.",
  },
  {
    question: "Po wykonaniu poniższego kodu na ekranie pokaże się?",
    url: "/images/csharppoli.png",
    a1: "Base/ChildA/ChildB/ChildA/ChildB",
    a2: "Base/ChildA/ChildB/Base/Base",
    a3: "Base/ChildA/ChildB/Base/ChildB",
    a4: "Base/ChildA/ChildB/ChildA/Base",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Zastosowano tutaj standardowy polimorfizm. Dzięki "virtual" wywołanie metody zależy od typu obiektu a nie typu referencji (zmiennej).',
  },
  {
    question: "Po wykonaniu poniższego kodu na ekranie pokaże się?",
    url: "/images/csharppoli2.png",
    a1: "Base/ChildA/ChildB/",
    a2: "Base/Base/Base",
    a3: "Base/Base/ChildB",
    a4: "Base/ChildA/Base",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Zastosowano tutaj standardowy polimorfizm. Dzięki "virtual" wywołanie metody zależy od typu obiektu a nie typu referencji (zmiennej).',
  },
  {
    question: "Po wykonaniu poniższego kodu na ekranie pokaże się?",
    url: "/images/csharppoli3.png",
    a1: "Base/ChildA/ChildB/",
    a2: "Base/Base/Base",
    a3: "Base/Base/ChildB",
    a4: "Base/ChildA/Base",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Zastosowano tutaj standardowy polimorfizm. Dzięki "virtual" wywołanie metody zależy od typu obiektu a nie typu referencji (zmiennej).',
  },
  {
    question: "Wynikiem działania poniższego kodu będzie?",
    url: "/images/operatoroverload.png",
    a1: "[4;6]",
    a2: "[1;2]",
    a3: "[3;4]",
    a4: "wystąpi błąd",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: 'Zastosowano tutaj standardowe przeciążenie operatora "+".',
  },
  {
    question:
      'Dlaczego metoda "PrintMe()" podkreśla na czerwono pola "x" oraz "y"',
    url: "/images/static.png",
    a1: "nie można korzystać w składowych statycznych z elementów niestatycznych",
    a2: 'zarówno "x" jak i "y" nie są zainicjowane domyślną wartością',
    a3: 'zarówno "x" jak i "y" oznaczono jako prywatne',
    a4: 'zarówno "x" jak i "y" powninno się poprzedzić słowem kluczowym "this"',
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Elementy statycznie nie mogą używać elementów niestatycznych klasy (potrzebny jest obiekt). W drugą stronę relacja jest możliwa.",
  },
  {
    question: "Poniższa klasa sugeruje budowę?",
    url: "/images/tree1.png",
    a1: "drzewa binarnego",
    a2: "kolejki",
    a3: "stosu",
    a4: "mapy",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "Chodzi o drzewo. Każdy węzeł drzewa oprócz wartości posiada dwie referencje (w c++ były by to wskaźniki) na opcjonalne dzieci. Drzewo jest binarne bo każdy węzeł ma maksymalnie dwoje dzieci",
  },
  {
    question:
      "Czy w poniższej implementacji zastosowano zasadę wstrzykiwania zależności?",
    url: "/images/nodi.png",
    a1: "NIE",
    a2: "TAK",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: 'Klasa "MailSender" jest wstawiona w pole klasy "MailMessage" na sztywno i nie da się jej zmienić z zewnątrz.',
  },
  {
    question:
      "Czy w poniższej implementacji zastosowano zasadę wstrzykiwania zależności?",
    url: "/images/di.png",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: 'Klasa "MailSender" jest wstawiona w pole klasy "MailMessage" przez konstruktor.',
  },
  {
    question: "Poniższą funkcję można nazwać poprawnym testem jednostkowym?",
    url: "/images/unittest.png",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: "",
  },
  {
    question: "Poniższa asercja zakończy się?",
    url: "/images/assertthrow.png",
    a1: "negatywnie",
    a2: "pozytywnie",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: 'Asercja oczekuje rzucenia konkretnego wyjątku ("DivideByZero"), ale podaliśmy do funkcji poprawne dane, więc nie zostanie on rzucony. Test nie przejdzie.',
  },
  {
    question: "Poniższa asercja zakończy się?",
    url: "/images/assertthrow2.png",
    a1: "pozytywnie",
    a2: "negatywnie",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: 'Asercja oczekuje rzucenia konkretnego wyjątku ("DivideByZero"). Zgodnie z implementacją funkcji "divide" zostanie on rzucony, ponieważ b = 0',
  },
  {
    question: "Poniższe dwie asercje są równoznaczne?",
    url: "/images/assert.png",
    a1: "TAK",
    a2: "NIE",
    a3: "",
    a4: "",
    tag: "NIEOFICJALNE",
    type: "2A",
    desc: 'Różnia się tylko zapisem. Chociaż w przypadku typów referencyjnych należy uważać tak samo jak z operatorem "==" oraz metodą "Equals()".',
  },
  {
    question: "Poniższy test zakończy się sukcesem gdy?",
    url: "/images/jest1.png",
    a1: "wynik dzielenia będzie wynosił 3",
    a2: "dzielenie wykona się bez błędów",
    a3: "operacja rzuci wyjątek",
    a4: "żadne z pozostałych",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question: "Poniższy test zakończy się sukcesem gdy?",
    url: "/images/jest2.png",
    a1: "operacja rzuci wyjątek",
    a2: "wynik dzielenia będzie wynosił 3",
    a3: "dzielenie wykona się bez błędów",
    a4: "żadne z pozostałych",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
  {
    question:
      'Aby test zakończył się sukcesem w miejsce "x" oraz "y" możemy wstawić odpowiednio?',
    url: "/images/jest3.png",
    a1: "'11223366111' oraz '11'",
    a2: "'2312376524' oraz '23'",
    a3: "'ABCDEF98765' oraz 'AB'",
    a4: "wszystkie pozostałe kombinację są ok",
    tag: "NIEOFICJALNE",
    type: "4A",
    desc: "",
  },
];

export default questions;
